// Code generated by protoc-gen-go. DO NOT EDIT.
// source: booking_proto/booking_event.proto

package booking_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContainerType int32

const (
	ContainerType_CT_NA   ContainerType = 0
	ContainerType_CT_12GP ContainerType = 1012
	ContainerType_CT_20GP ContainerType = 1020
	ContainerType_CT_40GP ContainerType = 1040
	ContainerType_CT_45GP ContainerType = 1045
	ContainerType_CT_53GP ContainerType = 1053
	ContainerType_CT_20HQ ContainerType = 2020
	ContainerType_CT_40HQ ContainerType = 2040
	ContainerType_CT_45HQ ContainerType = 2045
	ContainerType_CT_48HQ ContainerType = 2048
	ContainerType_CT_22AC ContainerType = 3022
	ContainerType_CT_40AC ContainerType = 3040
	ContainerType_CT_42B0 ContainerType = 3142
	ContainerType_CT_40BH ContainerType = 4040
	ContainerType_CT_20BU ContainerType = 5020
	ContainerType_CT_20FC ContainerType = 6020
	ContainerType_CT_40FC ContainerType = 6040
	ContainerType_CT_40FF ContainerType = 7040
	ContainerType_CT_40FH ContainerType = 8040
	ContainerType_CT_20FR ContainerType = 9020
	ContainerType_CT_45FR ContainerType = 9045
	ContainerType_CT_20G0 ContainerType = 10020
	ContainerType_CT_24G0 ContainerType = 10024
	ContainerType_CT_40G1 ContainerType = 11040
	ContainerType_CT_44G1 ContainerType = 11044
	ContainerType_CT_22G2 ContainerType = 12022
	ContainerType_CT_40G2 ContainerType = 12040
	ContainerType_CT_40G3 ContainerType = 13040
	ContainerType_CT_40G4 ContainerType = 14040
	ContainerType_CT_40GX ContainerType = 15040
	ContainerType_CT_20H1 ContainerType = 16020
	ContainerType_CT_40H1 ContainerType = 16040
	ContainerType_CT_20H2 ContainerType = 17020
	ContainerType_CT_40H2 ContainerType = 17040
	ContainerType_CT_20H3 ContainerType = 18020
	ContainerType_CT_40H3 ContainerType = 18040
	ContainerType_CT_20H4 ContainerType = 19020
	ContainerType_CT_40H4 ContainerType = 19040
	ContainerType_CT_20HG ContainerType = 20020
	ContainerType_CT_40HG ContainerType = 20040
	ContainerType_CT_20HH ContainerType = 21020
	ContainerType_CT_40HH ContainerType = 21040
	ContainerType_CT_40HX ContainerType = 22040
	ContainerType_CT_20IH ContainerType = 23020
	ContainerType_CT_40IH ContainerType = 23040
	ContainerType_CT_20MU ContainerType = 24020
	ContainerType_CT_40MU ContainerType = 24040
	ContainerType_CT_40OH ContainerType = 25040
	ContainerType_CT_20OS ContainerType = 26020
	ContainerType_CT_40OS ContainerType = 26040
	ContainerType_CT_20OT ContainerType = 27020
	ContainerType_CT_40OT ContainerType = 27040
	ContainerType_CT_20P1 ContainerType = 28020
	ContainerType_CT_45P1 ContainerType = 28045
	ContainerType_CT_28P3 ContainerType = 29028
	ContainerType_CT_42P4 ContainerType = 30042
	ContainerType_CT_22P5 ContainerType = 31022
	ContainerType_CT_46P5 ContainerType = 31046
	ContainerType_CT_40PC ContainerType = 32040
	ContainerType_CT_20PF ContainerType = 33020
	ContainerType_CT_40PF ContainerType = 33040
	ContainerType_CT_20PL ContainerType = 34020
	ContainerType_CT_40PL ContainerType = 34040
	ContainerType_CT_40PW ContainerType = 35040
	ContainerType_CT_45PW ContainerType = 35045
	ContainerType_CT_L5R0 ContainerType = 35901
	ContainerType_CT_M2R0 ContainerType = 35902
	ContainerType_CT_M5R0 ContainerType = 35903
	ContainerType_CT_44R1 ContainerType = 36044
	ContainerType_CT_25R2 ContainerType = 37025
	ContainerType_CT_42R3 ContainerType = 38042
	ContainerType_CT_45R3 ContainerType = 38045
	ContainerType_CT_22R9 ContainerType = 39022
	ContainerType_CT_42R9 ContainerType = 39042
	ContainerType_CT_45R9 ContainerType = 39045
	ContainerType_CT_20RD ContainerType = 40020
	ContainerType_CT_40RD ContainerType = 40040
	ContainerType_CT_4HRD ContainerType = 40140
	ContainerType_CT_12RF ContainerType = 41012
	ContainerType_CT_20RF ContainerType = 41020
	ContainerType_CT_40RF ContainerType = 41040
	ContainerType_CT_45RF ContainerType = 41045
	ContainerType_CT_40RH ContainerType = 42040
	ContainerType_CT_45RH ContainerType = 42045
	ContainerType_CT_20RQ ContainerType = 43020
	ContainerType_CT_22S3 ContainerType = 44022
	ContainerType_CT_25S3 ContainerType = 44025
	ContainerType_CT_40SR ContainerType = 45040
	ContainerType_CT_20T0 ContainerType = 46020
	ContainerType_CT_24T0 ContainerType = 46024
	ContainerType_CT_25T0 ContainerType = 46025
	ContainerType_CT_20T6 ContainerType = 47020
	ContainerType_CT_22T6 ContainerType = 47022
	ContainerType_CT_42T6 ContainerType = 47042
	ContainerType_CT_45T6 ContainerType = 47045
	ContainerType_CT_28T9 ContainerType = 48028
	ContainerType_CT_48T9 ContainerType = 48048
	ContainerType_CT_20TK ContainerType = 49020
	ContainerType_CT_40TK ContainerType = 49040
	ContainerType_CT_45TK ContainerType = 49045
	ContainerType_CT_24U0 ContainerType = 50024
	ContainerType_CT_28U0 ContainerType = 50028
	ContainerType_CT_44U0 ContainerType = 50044
	ContainerType_CT_48U0 ContainerType = 50048
	ContainerType_CT_L2U0 ContainerType = 50102
	ContainerType_CT_22U6 ContainerType = 51022
	ContainerType_CT_42U6 ContainerType = 51042
	ContainerType_CT_45U6 ContainerType = 51045
	ContainerType_CT_20VF ContainerType = 52020
	ContainerType_CT_20VT ContainerType = 53020
	ContainerType_CT_40VT ContainerType = 53040
	ContainerType_CT_20XX ContainerType = 54020
	ContainerType_CT_40XX ContainerType = 54040
)

var ContainerType_name = map[int32]string{
	0:     "CT_NA",
	1012:  "CT_12GP",
	1020:  "CT_20GP",
	1040:  "CT_40GP",
	1045:  "CT_45GP",
	1053:  "CT_53GP",
	2020:  "CT_20HQ",
	2040:  "CT_40HQ",
	2045:  "CT_45HQ",
	2048:  "CT_48HQ",
	3022:  "CT_22AC",
	3040:  "CT_40AC",
	3142:  "CT_42B0",
	4040:  "CT_40BH",
	5020:  "CT_20BU",
	6020:  "CT_20FC",
	6040:  "CT_40FC",
	7040:  "CT_40FF",
	8040:  "CT_40FH",
	9020:  "CT_20FR",
	9045:  "CT_45FR",
	10020: "CT_20G0",
	10024: "CT_24G0",
	11040: "CT_40G1",
	11044: "CT_44G1",
	12022: "CT_22G2",
	12040: "CT_40G2",
	13040: "CT_40G3",
	14040: "CT_40G4",
	15040: "CT_40GX",
	16020: "CT_20H1",
	16040: "CT_40H1",
	17020: "CT_20H2",
	17040: "CT_40H2",
	18020: "CT_20H3",
	18040: "CT_40H3",
	19020: "CT_20H4",
	19040: "CT_40H4",
	20020: "CT_20HG",
	20040: "CT_40HG",
	21020: "CT_20HH",
	21040: "CT_40HH",
	22040: "CT_40HX",
	23020: "CT_20IH",
	23040: "CT_40IH",
	24020: "CT_20MU",
	24040: "CT_40MU",
	25040: "CT_40OH",
	26020: "CT_20OS",
	26040: "CT_40OS",
	27020: "CT_20OT",
	27040: "CT_40OT",
	28020: "CT_20P1",
	28045: "CT_45P1",
	29028: "CT_28P3",
	30042: "CT_42P4",
	31022: "CT_22P5",
	31046: "CT_46P5",
	32040: "CT_40PC",
	33020: "CT_20PF",
	33040: "CT_40PF",
	34020: "CT_20PL",
	34040: "CT_40PL",
	35040: "CT_40PW",
	35045: "CT_45PW",
	35901: "CT_L5R0",
	35902: "CT_M2R0",
	35903: "CT_M5R0",
	36044: "CT_44R1",
	37025: "CT_25R2",
	38042: "CT_42R3",
	38045: "CT_45R3",
	39022: "CT_22R9",
	39042: "CT_42R9",
	39045: "CT_45R9",
	40020: "CT_20RD",
	40040: "CT_40RD",
	40140: "CT_4HRD",
	41012: "CT_12RF",
	41020: "CT_20RF",
	41040: "CT_40RF",
	41045: "CT_45RF",
	42040: "CT_40RH",
	42045: "CT_45RH",
	43020: "CT_20RQ",
	44022: "CT_22S3",
	44025: "CT_25S3",
	45040: "CT_40SR",
	46020: "CT_20T0",
	46024: "CT_24T0",
	46025: "CT_25T0",
	47020: "CT_20T6",
	47022: "CT_22T6",
	47042: "CT_42T6",
	47045: "CT_45T6",
	48028: "CT_28T9",
	48048: "CT_48T9",
	49020: "CT_20TK",
	49040: "CT_40TK",
	49045: "CT_45TK",
	50024: "CT_24U0",
	50028: "CT_28U0",
	50044: "CT_44U0",
	50048: "CT_48U0",
	50102: "CT_L2U0",
	51022: "CT_22U6",
	51042: "CT_42U6",
	51045: "CT_45U6",
	52020: "CT_20VF",
	53020: "CT_20VT",
	53040: "CT_40VT",
	54020: "CT_20XX",
	54040: "CT_40XX",
}
var ContainerType_value = map[string]int32{
	"CT_NA":   0,
	"CT_12GP": 1012,
	"CT_20GP": 1020,
	"CT_40GP": 1040,
	"CT_45GP": 1045,
	"CT_53GP": 1053,
	"CT_20HQ": 2020,
	"CT_40HQ": 2040,
	"CT_45HQ": 2045,
	"CT_48HQ": 2048,
	"CT_22AC": 3022,
	"CT_40AC": 3040,
	"CT_42B0": 3142,
	"CT_40BH": 4040,
	"CT_20BU": 5020,
	"CT_20FC": 6020,
	"CT_40FC": 6040,
	"CT_40FF": 7040,
	"CT_40FH": 8040,
	"CT_20FR": 9020,
	"CT_45FR": 9045,
	"CT_20G0": 10020,
	"CT_24G0": 10024,
	"CT_40G1": 11040,
	"CT_44G1": 11044,
	"CT_22G2": 12022,
	"CT_40G2": 12040,
	"CT_40G3": 13040,
	"CT_40G4": 14040,
	"CT_40GX": 15040,
	"CT_20H1": 16020,
	"CT_40H1": 16040,
	"CT_20H2": 17020,
	"CT_40H2": 17040,
	"CT_20H3": 18020,
	"CT_40H3": 18040,
	"CT_20H4": 19020,
	"CT_40H4": 19040,
	"CT_20HG": 20020,
	"CT_40HG": 20040,
	"CT_20HH": 21020,
	"CT_40HH": 21040,
	"CT_40HX": 22040,
	"CT_20IH": 23020,
	"CT_40IH": 23040,
	"CT_20MU": 24020,
	"CT_40MU": 24040,
	"CT_40OH": 25040,
	"CT_20OS": 26020,
	"CT_40OS": 26040,
	"CT_20OT": 27020,
	"CT_40OT": 27040,
	"CT_20P1": 28020,
	"CT_45P1": 28045,
	"CT_28P3": 29028,
	"CT_42P4": 30042,
	"CT_22P5": 31022,
	"CT_46P5": 31046,
	"CT_40PC": 32040,
	"CT_20PF": 33020,
	"CT_40PF": 33040,
	"CT_20PL": 34020,
	"CT_40PL": 34040,
	"CT_40PW": 35040,
	"CT_45PW": 35045,
	"CT_L5R0": 35901,
	"CT_M2R0": 35902,
	"CT_M5R0": 35903,
	"CT_44R1": 36044,
	"CT_25R2": 37025,
	"CT_42R3": 38042,
	"CT_45R3": 38045,
	"CT_22R9": 39022,
	"CT_42R9": 39042,
	"CT_45R9": 39045,
	"CT_20RD": 40020,
	"CT_40RD": 40040,
	"CT_4HRD": 40140,
	"CT_12RF": 41012,
	"CT_20RF": 41020,
	"CT_40RF": 41040,
	"CT_45RF": 41045,
	"CT_40RH": 42040,
	"CT_45RH": 42045,
	"CT_20RQ": 43020,
	"CT_22S3": 44022,
	"CT_25S3": 44025,
	"CT_40SR": 45040,
	"CT_20T0": 46020,
	"CT_24T0": 46024,
	"CT_25T0": 46025,
	"CT_20T6": 47020,
	"CT_22T6": 47022,
	"CT_42T6": 47042,
	"CT_45T6": 47045,
	"CT_28T9": 48028,
	"CT_48T9": 48048,
	"CT_20TK": 49020,
	"CT_40TK": 49040,
	"CT_45TK": 49045,
	"CT_24U0": 50024,
	"CT_28U0": 50028,
	"CT_44U0": 50044,
	"CT_48U0": 50048,
	"CT_L2U0": 50102,
	"CT_22U6": 51022,
	"CT_42U6": 51042,
	"CT_45U6": 51045,
	"CT_20VF": 52020,
	"CT_20VT": 53020,
	"CT_40VT": 53040,
	"CT_20XX": 54020,
	"CT_40XX": 54040,
}

func (x ContainerType) String() string {
	return proto.EnumName(ContainerType_name, int32(x))
}
func (ContainerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{0}
}

type ServiceMode int32

const (
	ServiceMode_SERVICE_MODE_UNKNOWN ServiceMode = 0
	ServiceMode_PORT_TO_PORT         ServiceMode = 101
	ServiceMode_PORT_TO_YARD         ServiceMode = 102
	ServiceMode_PORT_TO_DOOR         ServiceMode = 103
	ServiceMode_YARD_TO_PORT         ServiceMode = 201
	ServiceMode_YARD_TO_YARD         ServiceMode = 202
	ServiceMode_YARD_TO_DOOR         ServiceMode = 203
	ServiceMode_DOOR_TO_PORT         ServiceMode = 301
	ServiceMode_DOOR_TO_YARD         ServiceMode = 302
	ServiceMode_DOOR_TO_DOOR         ServiceMode = 303
)

var ServiceMode_name = map[int32]string{
	0:   "SERVICE_MODE_UNKNOWN",
	101: "PORT_TO_PORT",
	102: "PORT_TO_YARD",
	103: "PORT_TO_DOOR",
	201: "YARD_TO_PORT",
	202: "YARD_TO_YARD",
	203: "YARD_TO_DOOR",
	301: "DOOR_TO_PORT",
	302: "DOOR_TO_YARD",
	303: "DOOR_TO_DOOR",
}
var ServiceMode_value = map[string]int32{
	"SERVICE_MODE_UNKNOWN": 0,
	"PORT_TO_PORT":         101,
	"PORT_TO_YARD":         102,
	"PORT_TO_DOOR":         103,
	"YARD_TO_PORT":         201,
	"YARD_TO_YARD":         202,
	"YARD_TO_DOOR":         203,
	"DOOR_TO_PORT":         301,
	"DOOR_TO_YARD":         302,
	"DOOR_TO_DOOR":         303,
}

func (x ServiceMode) String() string {
	return proto.EnumName(ServiceMode_name, int32(x))
}
func (ServiceMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{1}
}

type ServiceType int32

const (
	ServiceType_SERVICE_TYPE_UNKNOWN ServiceType = 0
	ServiceType_SERVICE_FCL_FCL      ServiceType = 1
	ServiceType_SERVICE_FCL_LCL      ServiceType = 2
	ServiceType_SERVICE_LCL_FCL      ServiceType = 3
	ServiceType_SERVICE_LCL_LCL      ServiceType = 4
)

var ServiceType_name = map[int32]string{
	0: "SERVICE_TYPE_UNKNOWN",
	1: "SERVICE_FCL_FCL",
	2: "SERVICE_FCL_LCL",
	3: "SERVICE_LCL_FCL",
	4: "SERVICE_LCL_LCL",
}
var ServiceType_value = map[string]int32{
	"SERVICE_TYPE_UNKNOWN": 0,
	"SERVICE_FCL_FCL":      1,
	"SERVICE_FCL_LCL":      2,
	"SERVICE_LCL_FCL":      3,
	"SERVICE_LCL_LCL":      4,
}

func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{2}
}

type BLType int32

const (
	BLType_BL_TYPE_UNKNOWN  BLType = 0
	BLType_BL_TYPE_ORIGINAL BLType = 1
	BLType_BL_TYPE_SEAWAY   BLType = 2
	BLType_BL_TYPE_HOUSE    BLType = 3
)

var BLType_name = map[int32]string{
	0: "BL_TYPE_UNKNOWN",
	1: "BL_TYPE_ORIGINAL",
	2: "BL_TYPE_SEAWAY",
	3: "BL_TYPE_HOUSE",
}
var BLType_value = map[string]int32{
	"BL_TYPE_UNKNOWN":  0,
	"BL_TYPE_ORIGINAL": 1,
	"BL_TYPE_SEAWAY":   2,
	"BL_TYPE_HOUSE":    3,
}

func (x BLType) String() string {
	return proto.EnumName(BLType_name, int32(x))
}
func (BLType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{3}
}

type ConfirmationFunction int32

const (
	ConfirmationFunction_CONFIRMATION_UNKNOWN          ConfirmationFunction = 0
	ConfirmationFunction_CONFIRMATION_ACCEPT           ConfirmationFunction = 1
	ConfirmationFunction_CONFIRMATION_UPDATE           ConfirmationFunction = 2
	ConfirmationFunction_CONFIRMATION_CANCEL_OR_REJECT ConfirmationFunction = 3
	ConfirmationFunction_CONFIRMATION_ACK              ConfirmationFunction = 4
)

var ConfirmationFunction_name = map[int32]string{
	0: "CONFIRMATION_UNKNOWN",
	1: "CONFIRMATION_ACCEPT",
	2: "CONFIRMATION_UPDATE",
	3: "CONFIRMATION_CANCEL_OR_REJECT",
	4: "CONFIRMATION_ACK",
}
var ConfirmationFunction_value = map[string]int32{
	"CONFIRMATION_UNKNOWN":          0,
	"CONFIRMATION_ACCEPT":           1,
	"CONFIRMATION_UPDATE":           2,
	"CONFIRMATION_CANCEL_OR_REJECT": 3,
	"CONFIRMATION_ACK":              4,
}

func (x ConfirmationFunction) String() string {
	return proto.EnumName(ConfirmationFunction_name, int32(x))
}
func (ConfirmationFunction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{4}
}

type TemperatureUnit int32

const (
	TemperatureUnit_TEMPERATURE_UNKNOWN TemperatureUnit = 0
	TemperatureUnit_CELSIUS             TemperatureUnit = 1
	TemperatureUnit_FAHRENHEIT          TemperatureUnit = 2
)

var TemperatureUnit_name = map[int32]string{
	0: "TEMPERATURE_UNKNOWN",
	1: "CELSIUS",
	2: "FAHRENHEIT",
}
var TemperatureUnit_value = map[string]int32{
	"TEMPERATURE_UNKNOWN": 0,
	"CELSIUS":             1,
	"FAHRENHEIT":          2,
}

func (x TemperatureUnit) String() string {
	return proto.EnumName(TemperatureUnit_name, int32(x))
}
func (TemperatureUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{5}
}

type AirFlowUnit int32

const (
	AirFlowUnit_AIRFLOW_UNKNOWN AirFlowUnit = 0
	AirFlowUnit_CBM_PH          AirFlowUnit = 1
	AirFlowUnit_CBF_PM          AirFlowUnit = 2
)

var AirFlowUnit_name = map[int32]string{
	0: "AIRFLOW_UNKNOWN",
	1: "CBM_PH",
	2: "CBF_PM",
}
var AirFlowUnit_value = map[string]int32{
	"AIRFLOW_UNKNOWN": 0,
	"CBM_PH":          1,
	"CBF_PM":          2,
}

func (x AirFlowUnit) String() string {
	return proto.EnumName(AirFlowUnit_name, int32(x))
}
func (AirFlowUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{6}
}

type VolumeUnit int32

const (
	VolumeUnit_VOLUME_UNKNOWN VolumeUnit = 0
	VolumeUnit_CBM            VolumeUnit = 1
	VolumeUnit_CBF            VolumeUnit = 2
)

var VolumeUnit_name = map[int32]string{
	0: "VOLUME_UNKNOWN",
	1: "CBM",
	2: "CBF",
}
var VolumeUnit_value = map[string]int32{
	"VOLUME_UNKNOWN": 0,
	"CBM":            1,
	"CBF":            2,
}

func (x VolumeUnit) String() string {
	return proto.EnumName(VolumeUnit_name, int32(x))
}
func (VolumeUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{7}
}

type WeightUnit int32

const (
	WeightUnit_WEIGHT_UNKNOWN WeightUnit = 0
	WeightUnit_KG             WeightUnit = 1
	WeightUnit_LB             WeightUnit = 2
)

var WeightUnit_name = map[int32]string{
	0: "WEIGHT_UNKNOWN",
	1: "KG",
	2: "LB",
}
var WeightUnit_value = map[string]int32{
	"WEIGHT_UNKNOWN": 0,
	"KG":             1,
	"LB":             2,
}

func (x WeightUnit) String() string {
	return proto.EnumName(WeightUnit_name, int32(x))
}
func (WeightUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{8}
}

type MeasurementUnit int32

const (
	MeasurementUnit_MEATUREMENT_UNKNOWN MeasurementUnit = 0
	MeasurementUnit_FET                 MeasurementUnit = 1
	MeasurementUnit_MTR                 MeasurementUnit = 2
)

var MeasurementUnit_name = map[int32]string{
	0: "MEATUREMENT_UNKNOWN",
	1: "FET",
	2: "MTR",
}
var MeasurementUnit_value = map[string]int32{
	"MEATUREMENT_UNKNOWN": 0,
	"FET":                 1,
	"MTR":                 2,
}

func (x MeasurementUnit) String() string {
	return proto.EnumName(MeasurementUnit_name, int32(x))
}
func (MeasurementUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{9}
}

type PackageType int32

const (
	PackageType_PKG_UNKNOWN PackageType = 0
	PackageType_PKG_CT      PackageType = 1
	PackageType_PKG_PC      PackageType = 2
	PackageType_PKG_PK      PackageType = 3
	PackageType_PKG_CS      PackageType = 4
	PackageType_PKG_BG      PackageType = 5
	PackageType_PKG_BX      PackageType = 6
	PackageType_PKG_CR      PackageType = 7
	PackageType_PKG_RO      PackageType = 8
	PackageType_PKG_UN      PackageType = 9
	PackageType_PKG_DR      PackageType = 10
	PackageType_PKG_BE      PackageType = 11
	PackageType_PKG_BL      PackageType = 12
	PackageType_PKG_TK      PackageType = 13
	PackageType_PKG_CL      PackageType = 14
)

var PackageType_name = map[int32]string{
	0:  "PKG_UNKNOWN",
	1:  "PKG_CT",
	2:  "PKG_PC",
	3:  "PKG_PK",
	4:  "PKG_CS",
	5:  "PKG_BG",
	6:  "PKG_BX",
	7:  "PKG_CR",
	8:  "PKG_RO",
	9:  "PKG_UN",
	10: "PKG_DR",
	11: "PKG_BE",
	12: "PKG_BL",
	13: "PKG_TK",
	14: "PKG_CL",
}
var PackageType_value = map[string]int32{
	"PKG_UNKNOWN": 0,
	"PKG_CT":      1,
	"PKG_PC":      2,
	"PKG_PK":      3,
	"PKG_CS":      4,
	"PKG_BG":      5,
	"PKG_BX":      6,
	"PKG_CR":      7,
	"PKG_RO":      8,
	"PKG_UN":      9,
	"PKG_DR":      10,
	"PKG_BE":      11,
	"PKG_BL":      12,
	"PKG_TK":      13,
	"PKG_CL":      14,
}

func (x PackageType) String() string {
	return proto.EnumName(PackageType_name, int32(x))
}
func (PackageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{10}
}

type SealType int32

const (
	SealType_SEAL_UNKNOWN           SealType = 0
	SealType_SEAL_CARRIER           SealType = 1
	SealType_SEAL_SHIPPER           SealType = 2
	SealType_SEAL_QUARANTINE_AGENCY SealType = 3
	SealType_SEAL_CUSTOMS           SealType = 4
	SealType_SEAL_TERMINAL_OPERATOR SealType = 5
)

var SealType_name = map[int32]string{
	0: "SEAL_UNKNOWN",
	1: "SEAL_CARRIER",
	2: "SEAL_SHIPPER",
	3: "SEAL_QUARANTINE_AGENCY",
	4: "SEAL_CUSTOMS",
	5: "SEAL_TERMINAL_OPERATOR",
}
var SealType_value = map[string]int32{
	"SEAL_UNKNOWN":           0,
	"SEAL_CARRIER":           1,
	"SEAL_SHIPPER":           2,
	"SEAL_QUARANTINE_AGENCY": 3,
	"SEAL_CUSTOMS":           4,
	"SEAL_TERMINAL_OPERATOR": 5,
}

func (x SealType) String() string {
	return proto.EnumName(SealType_name, int32(x))
}
func (SealType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{11}
}

type Booking_Function int32

const (
	Booking_BOOKING_FUNCTION_UNKNOWN Booking_Function = 0
	Booking_BOOKING_FUNCTION_NEW     Booking_Function = 1
	Booking_BOOKING_FUNCTION_UPDATE  Booking_Function = 2
	Booking_BOOKING_FUNCTION_CANCEL  Booking_Function = 3
)

var Booking_Function_name = map[int32]string{
	0: "BOOKING_FUNCTION_UNKNOWN",
	1: "BOOKING_FUNCTION_NEW",
	2: "BOOKING_FUNCTION_UPDATE",
	3: "BOOKING_FUNCTION_CANCEL",
}
var Booking_Function_value = map[string]int32{
	"BOOKING_FUNCTION_UNKNOWN": 0,
	"BOOKING_FUNCTION_NEW":     1,
	"BOOKING_FUNCTION_UPDATE":  2,
	"BOOKING_FUNCTION_CANCEL":  3,
}

func (x Booking_Function) String() string {
	return proto.EnumName(Booking_Function_name, int32(x))
}
func (Booking_Function) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{0, 0}
}

type SI_Function int32

const (
	SI_SI_FUNCTION_UNKNOWN SI_Function = 0
	SI_SI_FUNCTION_NEW     SI_Function = 1
	SI_SI_FUNCTION_UPDATE  SI_Function = 2
	SI_SI_FUNCTION_CANCEL  SI_Function = 3
)

var SI_Function_name = map[int32]string{
	0: "SI_FUNCTION_UNKNOWN",
	1: "SI_FUNCTION_NEW",
	2: "SI_FUNCTION_UPDATE",
	3: "SI_FUNCTION_CANCEL",
}
var SI_Function_value = map[string]int32{
	"SI_FUNCTION_UNKNOWN": 0,
	"SI_FUNCTION_NEW":     1,
	"SI_FUNCTION_UPDATE":  2,
	"SI_FUNCTION_CANCEL":  3,
}

func (x SI_Function) String() string {
	return proto.EnumName(SI_Function_name, int32(x))
}
func (SI_Function) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{2, 0}
}

type VGM_Function int32

const (
	VGM_VGM_FUNCTION_UNKNOWN VGM_Function = 0
	VGM_VGM_FUNCTION_NEW     VGM_Function = 1
	VGM_VGM_FUNCTION_UPDATE  VGM_Function = 2
	VGM_VGM_FUNCTION_CANCEL  VGM_Function = 3
)

var VGM_Function_name = map[int32]string{
	0: "VGM_FUNCTION_UNKNOWN",
	1: "VGM_FUNCTION_NEW",
	2: "VGM_FUNCTION_UPDATE",
	3: "VGM_FUNCTION_CANCEL",
}
var VGM_Function_value = map[string]int32{
	"VGM_FUNCTION_UNKNOWN": 0,
	"VGM_FUNCTION_NEW":     1,
	"VGM_FUNCTION_UPDATE":  2,
	"VGM_FUNCTION_CANCEL":  3,
}

func (x VGM_Function) String() string {
	return proto.EnumName(VGM_Function_name, int32(x))
}
func (VGM_Function) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{4, 0}
}

type Party_Type int32

const (
	Party_PARTY_UNKNOWN          Party_Type = 0
	Party_BOOKING                Party_Type = 1
	Party_SHIPPER                Party_Type = 2
	Party_CONSIGNEE              Party_Type = 3
	Party_FORWARDER              Party_Type = 4
	Party_NOTIFY_PARTY           Party_Type = 5
	Party_ALSO_NOTIFY_PARTY      Party_Type = 6
	Party_MORE_ALSO_NOTIFY_PARTY Party_Type = 7
	Party_CONTRACT_PARTY         Party_Type = 8
	Party_FREIGHT_PAYER          Party_Type = 9
	Party_SHIP_FROM              Party_Type = 10
	Party_SHIP_TO                Party_Type = 11
	Party_IMPORTER               Party_Type = 12
	Party_BOOKER                 Party_Type = 13
	Party_CARRIER                Party_Type = 14
	Party_WEIGHING_PARTY         Party_Type = 15
)

var Party_Type_name = map[int32]string{
	0:  "PARTY_UNKNOWN",
	1:  "BOOKING",
	2:  "SHIPPER",
	3:  "CONSIGNEE",
	4:  "FORWARDER",
	5:  "NOTIFY_PARTY",
	6:  "ALSO_NOTIFY_PARTY",
	7:  "MORE_ALSO_NOTIFY_PARTY",
	8:  "CONTRACT_PARTY",
	9:  "FREIGHT_PAYER",
	10: "SHIP_FROM",
	11: "SHIP_TO",
	12: "IMPORTER",
	13: "BOOKER",
	14: "CARRIER",
	15: "WEIGHING_PARTY",
}
var Party_Type_value = map[string]int32{
	"PARTY_UNKNOWN":          0,
	"BOOKING":                1,
	"SHIPPER":                2,
	"CONSIGNEE":              3,
	"FORWARDER":              4,
	"NOTIFY_PARTY":           5,
	"ALSO_NOTIFY_PARTY":      6,
	"MORE_ALSO_NOTIFY_PARTY": 7,
	"CONTRACT_PARTY":         8,
	"FREIGHT_PAYER":          9,
	"SHIP_FROM":              10,
	"SHIP_TO":                11,
	"IMPORTER":               12,
	"BOOKER":                 13,
	"CARRIER":                14,
	"WEIGHING_PARTY":         15,
}

func (x Party_Type) String() string {
	return proto.EnumName(Party_Type_name, int32(x))
}
func (Party_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{14, 0}
}

type CN24_CodeType int32

const (
	CN24_CODE_UNKNOWN    CN24_CodeType = 0
	CN24_ENTERPRISE_CODE CN24_CodeType = 1
	CN24_PASSPORT        CN24_CodeType = 2
	CN24_PERSONAL_ID     CN24_CodeType = 3
)

var CN24_CodeType_name = map[int32]string{
	0: "CODE_UNKNOWN",
	1: "ENTERPRISE_CODE",
	2: "PASSPORT",
	3: "PERSONAL_ID",
}
var CN24_CodeType_value = map[string]int32{
	"CODE_UNKNOWN":    0,
	"ENTERPRISE_CODE": 1,
	"PASSPORT":        2,
	"PERSONAL_ID":     3,
}

func (x CN24_CodeType) String() string {
	return proto.EnumName(CN24_CodeType_name, int32(x))
}
func (CN24_CodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{15, 0}
}

type Booking struct {
	PlatformId           int64                       `protobuf:"varint,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	CreatedBy            int64                       `protobuf:"varint,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ApplicationNumber    string                      `protobuf:"bytes,4,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version              int64                       `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	IsDraft              bool                        `protobuf:"varint,6,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	Function             Booking_Function            `protobuf:"varint,7,opt,name=function,proto3,enum=booking.proto.Booking_Function" json:"function,omitempty"`
	Region               string                      `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	Carrier              string                      `protobuf:"bytes,9,opt,name=carrier,proto3" json:"carrier,omitempty"`
	ContractNumber       string                      `protobuf:"bytes,10,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	BookingNumber        string                      `protobuf:"bytes,11,opt,name=booking_number,json=bookingNumber,proto3" json:"booking_number,omitempty"`
	BookingAgent         string                      `protobuf:"bytes,12,opt,name=booking_agent,json=bookingAgent,proto3" json:"booking_agent,omitempty"`
	Remark               string                      `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`
	EmailNotifications   string                      `protobuf:"bytes,14,opt,name=email_notifications,json=emailNotifications,proto3" json:"email_notifications,omitempty"`
	References           *References                 `protobuf:"bytes,15,opt,name=references,proto3" json:"references,omitempty"`
	CarriageRequirement  *CarriageRequirement        `protobuf:"bytes,16,opt,name=carriage_requirement,json=carriageRequirement,proto3" json:"carriage_requirement,omitempty"`
	PaymentInformation   *PaymentInformation         `protobuf:"bytes,17,opt,name=payment_information,json=paymentInformation,proto3" json:"payment_information,omitempty"`
	Parties              []*Party                    `protobuf:"bytes,18,rep,name=parties,proto3" json:"parties,omitempty"`
	ContainerRequests    []*Booking_ContainerRequest `protobuf:"bytes,19,rep,name=container_requests,json=containerRequests,proto3" json:"container_requests,omitempty"`
	Cargos               []*BookingCargo             `protobuf:"bytes,20,rep,name=cargos,proto3" json:"cargos,omitempty"`
	Timestamp            int64                       `protobuf:"varint,21,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsDeleted            bool                        `protobuf:"varint,22,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	Notes                map[string]string           `protobuf:"bytes,23,rep,name=notes,proto3" json:"notes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BluexNumbers         []string                    `protobuf:"bytes,24,rep,name=bluex_numbers,json=bluexNumbers,proto3" json:"bluex_numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Booking) Reset()         { *m = Booking{} }
func (m *Booking) String() string { return proto.CompactTextString(m) }
func (*Booking) ProtoMessage()    {}
func (*Booking) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{0}
}
func (m *Booking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Booking.Unmarshal(m, b)
}
func (m *Booking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Booking.Marshal(b, m, deterministic)
}
func (dst *Booking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Booking.Merge(dst, src)
}
func (m *Booking) XXX_Size() int {
	return xxx_messageInfo_Booking.Size(m)
}
func (m *Booking) XXX_DiscardUnknown() {
	xxx_messageInfo_Booking.DiscardUnknown(m)
}

var xxx_messageInfo_Booking proto.InternalMessageInfo

func (m *Booking) GetPlatformId() int64 {
	if m != nil {
		return m.PlatformId
	}
	return 0
}

func (m *Booking) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *Booking) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *Booking) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Booking) GetIsDraft() bool {
	if m != nil {
		return m.IsDraft
	}
	return false
}

func (m *Booking) GetFunction() Booking_Function {
	if m != nil {
		return m.Function
	}
	return Booking_BOOKING_FUNCTION_UNKNOWN
}

func (m *Booking) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Booking) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *Booking) GetContractNumber() string {
	if m != nil {
		return m.ContractNumber
	}
	return ""
}

func (m *Booking) GetBookingNumber() string {
	if m != nil {
		return m.BookingNumber
	}
	return ""
}

func (m *Booking) GetBookingAgent() string {
	if m != nil {
		return m.BookingAgent
	}
	return ""
}

func (m *Booking) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Booking) GetEmailNotifications() string {
	if m != nil {
		return m.EmailNotifications
	}
	return ""
}

func (m *Booking) GetReferences() *References {
	if m != nil {
		return m.References
	}
	return nil
}

func (m *Booking) GetCarriageRequirement() *CarriageRequirement {
	if m != nil {
		return m.CarriageRequirement
	}
	return nil
}

func (m *Booking) GetPaymentInformation() *PaymentInformation {
	if m != nil {
		return m.PaymentInformation
	}
	return nil
}

func (m *Booking) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *Booking) GetContainerRequests() []*Booking_ContainerRequest {
	if m != nil {
		return m.ContainerRequests
	}
	return nil
}

func (m *Booking) GetCargos() []*BookingCargo {
	if m != nil {
		return m.Cargos
	}
	return nil
}

func (m *Booking) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Booking) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *Booking) GetNotes() map[string]string {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Booking) GetBluexNumbers() []string {
	if m != nil {
		return m.BluexNumbers
	}
	return nil
}

type Booking_ContainerRequest struct {
	Quantity             int64                 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Type                 ContainerType         `protobuf:"varint,2,opt,name=type,proto3,enum=booking.proto.ContainerType" json:"type,omitempty"`
	ActiveReefer         bool                  `protobuf:"varint,3,opt,name=active_reefer,json=activeReefer,proto3" json:"active_reefer,omitempty"`
	Temperature          *Temperature          `protobuf:"bytes,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Vent                 bool                  `protobuf:"varint,5,opt,name=vent,proto3" json:"vent,omitempty"`
	AirFlow              *AirFlow              `protobuf:"bytes,6,opt,name=air_flow,json=airFlow,proto3" json:"air_flow,omitempty"`
	Humidity             *wrappers.DoubleValue `protobuf:"bytes,7,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Measurement          *Measurement          `protobuf:"bytes,8,opt,name=measurement,proto3" json:"measurement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Booking_ContainerRequest) Reset()         { *m = Booking_ContainerRequest{} }
func (m *Booking_ContainerRequest) String() string { return proto.CompactTextString(m) }
func (*Booking_ContainerRequest) ProtoMessage()    {}
func (*Booking_ContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{0, 0}
}
func (m *Booking_ContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Booking_ContainerRequest.Unmarshal(m, b)
}
func (m *Booking_ContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Booking_ContainerRequest.Marshal(b, m, deterministic)
}
func (dst *Booking_ContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Booking_ContainerRequest.Merge(dst, src)
}
func (m *Booking_ContainerRequest) XXX_Size() int {
	return xxx_messageInfo_Booking_ContainerRequest.Size(m)
}
func (m *Booking_ContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Booking_ContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Booking_ContainerRequest proto.InternalMessageInfo

func (m *Booking_ContainerRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Booking_ContainerRequest) GetType() ContainerType {
	if m != nil {
		return m.Type
	}
	return ContainerType_CT_NA
}

func (m *Booking_ContainerRequest) GetActiveReefer() bool {
	if m != nil {
		return m.ActiveReefer
	}
	return false
}

func (m *Booking_ContainerRequest) GetTemperature() *Temperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *Booking_ContainerRequest) GetVent() bool {
	if m != nil {
		return m.Vent
	}
	return false
}

func (m *Booking_ContainerRequest) GetAirFlow() *AirFlow {
	if m != nil {
		return m.AirFlow
	}
	return nil
}

func (m *Booking_ContainerRequest) GetHumidity() *wrappers.DoubleValue {
	if m != nil {
		return m.Humidity
	}
	return nil
}

func (m *Booking_ContainerRequest) GetMeasurement() *Measurement {
	if m != nil {
		return m.Measurement
	}
	return nil
}

type BookingConfirm struct {
	ApplicationNumber    string                      `protobuf:"bytes,1,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version              int64                       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Region               string                      `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Carrier              string                      `protobuf:"bytes,4,opt,name=carrier,proto3" json:"carrier,omitempty"`
	BookingNumber        string                      `protobuf:"bytes,5,opt,name=booking_number,json=bookingNumber,proto3" json:"booking_number,omitempty"`
	BlNumber             string                      `protobuf:"bytes,6,opt,name=bl_number,json=blNumber,proto3" json:"bl_number,omitempty"`
	Function             ConfirmationFunction        `protobuf:"varint,7,opt,name=function,proto3,enum=booking.proto.ConfirmationFunction" json:"function,omitempty"`
	ContractNumber       string                      `protobuf:"bytes,8,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	ResponseCode         string                      `protobuf:"bytes,9,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	CarrierContact       *CarrierContact             `protobuf:"bytes,10,opt,name=carrier_contact,json=carrierContact,proto3" json:"carrier_contact,omitempty"`
	ServiceMode          ServiceMode                 `protobuf:"varint,11,opt,name=service_mode,json=serviceMode,proto3,enum=booking.proto.ServiceMode" json:"service_mode,omitempty"`
	Remark               string                      `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	Cargos               []*BookingCargo             `protobuf:"bytes,13,rep,name=cargos,proto3" json:"cargos,omitempty"`
	Containers           []*BookingConfirm_Container `protobuf:"bytes,14,rep,name=containers,proto3" json:"containers,omitempty"`
	Parties              []*Party                    `protobuf:"bytes,15,rep,name=parties,proto3" json:"parties,omitempty"`
	Vessel               *Vessel                     `protobuf:"bytes,16,opt,name=vessel,proto3" json:"vessel,omitempty"`
	PreVessel            *Vessel                     `protobuf:"bytes,17,opt,name=pre_vessel,json=preVessel,proto3" json:"pre_vessel,omitempty"`
	FourP                *FourP                      `protobuf:"bytes,18,opt,name=four_p,json=fourP,proto3" json:"four_p,omitempty"`
	Etd                  int64                       `protobuf:"varint,19,opt,name=etd,proto3" json:"etd,omitempty"`
	Eta                  int64                       `protobuf:"varint,20,opt,name=eta,proto3" json:"eta,omitempty"`
	PickupDepot          *BookingConfirm_Depot       `protobuf:"bytes,21,opt,name=pickup_depot,json=pickupDepot,proto3" json:"pickup_depot,omitempty"`
	ReturnDepot          *BookingConfirm_Depot       `protobuf:"bytes,22,opt,name=return_depot,json=returnDepot,proto3" json:"return_depot,omitempty"`
	ServiceType          ServiceType                 `protobuf:"varint,23,opt,name=service_type,json=serviceType,proto3,enum=booking.proto.ServiceType" json:"service_type,omitempty"`
	Timestamp            int64                       `protobuf:"varint,24,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reason               string                      `protobuf:"bytes,25,opt,name=reason,proto3" json:"reason,omitempty"`
	ShippingOrderNumber  string                      `protobuf:"bytes,26,opt,name=shipping_order_number,json=shippingOrderNumber,proto3" json:"shipping_order_number,omitempty"`
	ContainerCutOffDate  int64                       `protobuf:"varint,27,opt,name=container_cut_off_date,json=containerCutOffDate,proto3" json:"container_cut_off_date,omitempty"`
	SiCutOffDate         int64                       `protobuf:"varint,28,opt,name=si_cut_off_date,json=siCutOffDate,proto3" json:"si_cut_off_date,omitempty"`
	VgmCutOffDate        int64                       `protobuf:"varint,29,opt,name=vgm_cut_off_date,json=vgmCutOffDate,proto3" json:"vgm_cut_off_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BookingConfirm) Reset()         { *m = BookingConfirm{} }
func (m *BookingConfirm) String() string { return proto.CompactTextString(m) }
func (*BookingConfirm) ProtoMessage()    {}
func (*BookingConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{1}
}
func (m *BookingConfirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookingConfirm.Unmarshal(m, b)
}
func (m *BookingConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookingConfirm.Marshal(b, m, deterministic)
}
func (dst *BookingConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookingConfirm.Merge(dst, src)
}
func (m *BookingConfirm) XXX_Size() int {
	return xxx_messageInfo_BookingConfirm.Size(m)
}
func (m *BookingConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_BookingConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_BookingConfirm proto.InternalMessageInfo

func (m *BookingConfirm) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *BookingConfirm) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BookingConfirm) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BookingConfirm) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *BookingConfirm) GetBookingNumber() string {
	if m != nil {
		return m.BookingNumber
	}
	return ""
}

func (m *BookingConfirm) GetBlNumber() string {
	if m != nil {
		return m.BlNumber
	}
	return ""
}

func (m *BookingConfirm) GetFunction() ConfirmationFunction {
	if m != nil {
		return m.Function
	}
	return ConfirmationFunction_CONFIRMATION_UNKNOWN
}

func (m *BookingConfirm) GetContractNumber() string {
	if m != nil {
		return m.ContractNumber
	}
	return ""
}

func (m *BookingConfirm) GetResponseCode() string {
	if m != nil {
		return m.ResponseCode
	}
	return ""
}

func (m *BookingConfirm) GetCarrierContact() *CarrierContact {
	if m != nil {
		return m.CarrierContact
	}
	return nil
}

func (m *BookingConfirm) GetServiceMode() ServiceMode {
	if m != nil {
		return m.ServiceMode
	}
	return ServiceMode_SERVICE_MODE_UNKNOWN
}

func (m *BookingConfirm) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *BookingConfirm) GetCargos() []*BookingCargo {
	if m != nil {
		return m.Cargos
	}
	return nil
}

func (m *BookingConfirm) GetContainers() []*BookingConfirm_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *BookingConfirm) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *BookingConfirm) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *BookingConfirm) GetPreVessel() *Vessel {
	if m != nil {
		return m.PreVessel
	}
	return nil
}

func (m *BookingConfirm) GetFourP() *FourP {
	if m != nil {
		return m.FourP
	}
	return nil
}

func (m *BookingConfirm) GetEtd() int64 {
	if m != nil {
		return m.Etd
	}
	return 0
}

func (m *BookingConfirm) GetEta() int64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *BookingConfirm) GetPickupDepot() *BookingConfirm_Depot {
	if m != nil {
		return m.PickupDepot
	}
	return nil
}

func (m *BookingConfirm) GetReturnDepot() *BookingConfirm_Depot {
	if m != nil {
		return m.ReturnDepot
	}
	return nil
}

func (m *BookingConfirm) GetServiceType() ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (m *BookingConfirm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BookingConfirm) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *BookingConfirm) GetShippingOrderNumber() string {
	if m != nil {
		return m.ShippingOrderNumber
	}
	return ""
}

func (m *BookingConfirm) GetContainerCutOffDate() int64 {
	if m != nil {
		return m.ContainerCutOffDate
	}
	return 0
}

func (m *BookingConfirm) GetSiCutOffDate() int64 {
	if m != nil {
		return m.SiCutOffDate
	}
	return 0
}

func (m *BookingConfirm) GetVgmCutOffDate() int64 {
	if m != nil {
		return m.VgmCutOffDate
	}
	return 0
}

type BookingConfirm_Container struct {
	Quantity             int64         `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Type                 ContainerType `protobuf:"varint,2,opt,name=type,proto3,enum=booking.proto.ContainerType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BookingConfirm_Container) Reset()         { *m = BookingConfirm_Container{} }
func (m *BookingConfirm_Container) String() string { return proto.CompactTextString(m) }
func (*BookingConfirm_Container) ProtoMessage()    {}
func (*BookingConfirm_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{1, 0}
}
func (m *BookingConfirm_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookingConfirm_Container.Unmarshal(m, b)
}
func (m *BookingConfirm_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookingConfirm_Container.Marshal(b, m, deterministic)
}
func (dst *BookingConfirm_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookingConfirm_Container.Merge(dst, src)
}
func (m *BookingConfirm_Container) XXX_Size() int {
	return xxx_messageInfo_BookingConfirm_Container.Size(m)
}
func (m *BookingConfirm_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_BookingConfirm_Container.DiscardUnknown(m)
}

var xxx_messageInfo_BookingConfirm_Container proto.InternalMessageInfo

func (m *BookingConfirm_Container) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *BookingConfirm_Container) GetType() ContainerType {
	if m != nil {
		return m.Type
	}
	return ContainerType_CT_NA
}

type BookingConfirm_Depot struct {
	Depot                string   `protobuf:"bytes,1,opt,name=depot,proto3" json:"depot,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	When                 int64    `protobuf:"varint,3,opt,name=when,proto3" json:"when,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookingConfirm_Depot) Reset()         { *m = BookingConfirm_Depot{} }
func (m *BookingConfirm_Depot) String() string { return proto.CompactTextString(m) }
func (*BookingConfirm_Depot) ProtoMessage()    {}
func (*BookingConfirm_Depot) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{1, 1}
}
func (m *BookingConfirm_Depot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookingConfirm_Depot.Unmarshal(m, b)
}
func (m *BookingConfirm_Depot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookingConfirm_Depot.Marshal(b, m, deterministic)
}
func (dst *BookingConfirm_Depot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookingConfirm_Depot.Merge(dst, src)
}
func (m *BookingConfirm_Depot) XXX_Size() int {
	return xxx_messageInfo_BookingConfirm_Depot.Size(m)
}
func (m *BookingConfirm_Depot) XXX_DiscardUnknown() {
	xxx_messageInfo_BookingConfirm_Depot.DiscardUnknown(m)
}

var xxx_messageInfo_BookingConfirm_Depot proto.InternalMessageInfo

func (m *BookingConfirm_Depot) GetDepot() string {
	if m != nil {
		return m.Depot
	}
	return ""
}

func (m *BookingConfirm_Depot) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *BookingConfirm_Depot) GetWhen() int64 {
	if m != nil {
		return m.When
	}
	return 0
}

type SI struct {
	PlatformId           int64                `protobuf:"varint,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	CreatedBy            int64                `protobuf:"varint,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ApplicationNumber    string               `protobuf:"bytes,4,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version              int64                `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	IsDraft              bool                 `protobuf:"varint,6,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	Region               string               `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	Function             SI_Function          `protobuf:"varint,8,opt,name=function,proto3,enum=booking.proto.SI_Function" json:"function,omitempty"`
	Carrier              string               `protobuf:"bytes,9,opt,name=carrier,proto3" json:"carrier,omitempty"`
	ContractNumber       string               `protobuf:"bytes,10,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	MlbNumber            string               `protobuf:"bytes,11,opt,name=mlb_number,json=mlbNumber,proto3" json:"mlb_number,omitempty"`
	Parties              []*Party             `protobuf:"bytes,12,rep,name=parties,proto3" json:"parties,omitempty"`
	References           *References          `protobuf:"bytes,13,opt,name=references,proto3" json:"references,omitempty"`
	CarriageRequirement  *CarriageRequirement `protobuf:"bytes,14,opt,name=carriage_requirement,json=carriageRequirement,proto3" json:"carriage_requirement,omitempty"`
	PaymentInformation   *PaymentInformation  `protobuf:"bytes,15,opt,name=payment_information,json=paymentInformation,proto3" json:"payment_information,omitempty"`
	BlPrintInstructions  *BLPrintInstructions `protobuf:"bytes,16,opt,name=bl_print_instructions,json=blPrintInstructions,proto3" json:"bl_print_instructions,omitempty"`
	Cargos               []*SICargo           `protobuf:"bytes,17,rep,name=cargos,proto3" json:"cargos,omitempty"`
	Timestamp            int64                `protobuf:"varint,18,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsDeleted            bool                 `protobuf:"varint,19,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	Notes                map[string]string    `protobuf:"bytes,20,rep,name=notes,proto3" json:"notes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShippingOrderNumber  string               `protobuf:"bytes,21,opt,name=shipping_order_number,json=shippingOrderNumber,proto3" json:"shipping_order_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SI) Reset()         { *m = SI{} }
func (m *SI) String() string { return proto.CompactTextString(m) }
func (*SI) ProtoMessage()    {}
func (*SI) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{2}
}
func (m *SI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SI.Unmarshal(m, b)
}
func (m *SI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SI.Marshal(b, m, deterministic)
}
func (dst *SI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SI.Merge(dst, src)
}
func (m *SI) XXX_Size() int {
	return xxx_messageInfo_SI.Size(m)
}
func (m *SI) XXX_DiscardUnknown() {
	xxx_messageInfo_SI.DiscardUnknown(m)
}

var xxx_messageInfo_SI proto.InternalMessageInfo

func (m *SI) GetPlatformId() int64 {
	if m != nil {
		return m.PlatformId
	}
	return 0
}

func (m *SI) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *SI) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *SI) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SI) GetIsDraft() bool {
	if m != nil {
		return m.IsDraft
	}
	return false
}

func (m *SI) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SI) GetFunction() SI_Function {
	if m != nil {
		return m.Function
	}
	return SI_SI_FUNCTION_UNKNOWN
}

func (m *SI) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *SI) GetContractNumber() string {
	if m != nil {
		return m.ContractNumber
	}
	return ""
}

func (m *SI) GetMlbNumber() string {
	if m != nil {
		return m.MlbNumber
	}
	return ""
}

func (m *SI) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *SI) GetReferences() *References {
	if m != nil {
		return m.References
	}
	return nil
}

func (m *SI) GetCarriageRequirement() *CarriageRequirement {
	if m != nil {
		return m.CarriageRequirement
	}
	return nil
}

func (m *SI) GetPaymentInformation() *PaymentInformation {
	if m != nil {
		return m.PaymentInformation
	}
	return nil
}

func (m *SI) GetBlPrintInstructions() *BLPrintInstructions {
	if m != nil {
		return m.BlPrintInstructions
	}
	return nil
}

func (m *SI) GetCargos() []*SICargo {
	if m != nil {
		return m.Cargos
	}
	return nil
}

func (m *SI) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SI) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *SI) GetNotes() map[string]string {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *SI) GetShippingOrderNumber() string {
	if m != nil {
		return m.ShippingOrderNumber
	}
	return ""
}

type SIConfirm struct {
	ApplicationNumber         string               `protobuf:"bytes,1,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version                   int64                `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Region                    string               `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Function                  ConfirmationFunction `protobuf:"varint,4,opt,name=function,proto3,enum=booking.proto.ConfirmationFunction" json:"function,omitempty"`
	CarrierContact            *CarrierContact      `protobuf:"bytes,5,opt,name=carrier_contact,json=carrierContact,proto3" json:"carrier_contact,omitempty"`
	Carrier                   string               `protobuf:"bytes,6,opt,name=carrier,proto3" json:"carrier,omitempty"`
	Cargos                    []*SICargo           `protobuf:"bytes,7,rep,name=cargos,proto3" json:"cargos,omitempty"`
	Parties                   []*Party             `protobuf:"bytes,8,rep,name=parties,proto3" json:"parties,omitempty"`
	BookingNumbers            []string             `protobuf:"bytes,9,rep,name=booking_numbers,json=bookingNumbers,proto3" json:"booking_numbers,omitempty"`
	ServiceMode               ServiceMode          `protobuf:"varint,10,opt,name=service_mode,json=serviceMode,proto3,enum=booking.proto.ServiceMode" json:"service_mode,omitempty"`
	ServiceType               ServiceType          `protobuf:"varint,11,opt,name=service_type,json=serviceType,proto3,enum=booking.proto.ServiceType" json:"service_type,omitempty"`
	ContractNumber            string               `protobuf:"bytes,12,opt,name=contract_number,json=contractNumber,proto3" json:"contract_number,omitempty"`
	BlType                    BLType               `protobuf:"varint,13,opt,name=bl_type,json=blType,proto3,enum=booking.proto.BLType" json:"bl_type,omitempty"`
	BlNumber                  string               `protobuf:"bytes,14,opt,name=bl_number,json=blNumber,proto3" json:"bl_number,omitempty"`
	BlIssuePlace              *Location            `protobuf:"bytes,15,opt,name=bl_issue_place,json=blIssuePlace,proto3" json:"bl_issue_place,omitempty"`
	ConsigneeOrderNumber      string               `protobuf:"bytes,17,opt,name=consignee_order_number,json=consigneeOrderNumber,proto3" json:"consignee_order_number,omitempty"`
	ExportDeclaration         string               `protobuf:"bytes,18,opt,name=export_declaration,json=exportDeclaration,proto3" json:"export_declaration,omitempty"`
	Currency                  string               `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency,omitempty"`
	PaymentPlace              *Location            `protobuf:"bytes,20,opt,name=payment_place,json=paymentPlace,proto3" json:"payment_place,omitempty"`
	FourP                     *FourP               `protobuf:"bytes,22,opt,name=four_p,json=fourP,proto3" json:"four_p,omitempty"`
	Etd                       int64                `protobuf:"varint,23,opt,name=etd,proto3" json:"etd,omitempty"`
	Eta                       int64                `protobuf:"varint,24,opt,name=eta,proto3" json:"eta,omitempty"`
	ActualDeparture           int64                `protobuf:"varint,25,opt,name=actual_departure,json=actualDeparture,proto3" json:"actual_departure,omitempty"`
	ActualArrival             int64                `protobuf:"varint,26,opt,name=actual_arrival,json=actualArrival,proto3" json:"actual_arrival,omitempty"`
	Vessel                    *Vessel              `protobuf:"bytes,27,opt,name=vessel,proto3" json:"vessel,omitempty"`
	PreVessel                 *Vessel              `protobuf:"bytes,28,opt,name=pre_vessel,json=preVessel,proto3" json:"pre_vessel,omitempty"`
	LetterOfCreditIssueDate   int64                `protobuf:"varint,29,opt,name=letter_of_credit_issue_date,json=letterOfCreditIssueDate,proto3" json:"letter_of_credit_issue_date,omitempty"`
	LetterOfCreditExpiredDate int64                `protobuf:"varint,30,opt,name=letter_of_credit_expired_date,json=letterOfCreditExpiredDate,proto3" json:"letter_of_credit_expired_date,omitempty"`
	Timestamp                 int64                `protobuf:"varint,31,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PaymentInformation        *PaymentInformation  `protobuf:"bytes,32,opt,name=payment_information,json=paymentInformation,proto3" json:"payment_information,omitempty"`
	Reason                    string               `protobuf:"bytes,33,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *SIConfirm) Reset()         { *m = SIConfirm{} }
func (m *SIConfirm) String() string { return proto.CompactTextString(m) }
func (*SIConfirm) ProtoMessage()    {}
func (*SIConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{3}
}
func (m *SIConfirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SIConfirm.Unmarshal(m, b)
}
func (m *SIConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SIConfirm.Marshal(b, m, deterministic)
}
func (dst *SIConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SIConfirm.Merge(dst, src)
}
func (m *SIConfirm) XXX_Size() int {
	return xxx_messageInfo_SIConfirm.Size(m)
}
func (m *SIConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_SIConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_SIConfirm proto.InternalMessageInfo

func (m *SIConfirm) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *SIConfirm) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SIConfirm) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SIConfirm) GetFunction() ConfirmationFunction {
	if m != nil {
		return m.Function
	}
	return ConfirmationFunction_CONFIRMATION_UNKNOWN
}

func (m *SIConfirm) GetCarrierContact() *CarrierContact {
	if m != nil {
		return m.CarrierContact
	}
	return nil
}

func (m *SIConfirm) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *SIConfirm) GetCargos() []*SICargo {
	if m != nil {
		return m.Cargos
	}
	return nil
}

func (m *SIConfirm) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *SIConfirm) GetBookingNumbers() []string {
	if m != nil {
		return m.BookingNumbers
	}
	return nil
}

func (m *SIConfirm) GetServiceMode() ServiceMode {
	if m != nil {
		return m.ServiceMode
	}
	return ServiceMode_SERVICE_MODE_UNKNOWN
}

func (m *SIConfirm) GetServiceType() ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (m *SIConfirm) GetContractNumber() string {
	if m != nil {
		return m.ContractNumber
	}
	return ""
}

func (m *SIConfirm) GetBlType() BLType {
	if m != nil {
		return m.BlType
	}
	return BLType_BL_TYPE_UNKNOWN
}

func (m *SIConfirm) GetBlNumber() string {
	if m != nil {
		return m.BlNumber
	}
	return ""
}

func (m *SIConfirm) GetBlIssuePlace() *Location {
	if m != nil {
		return m.BlIssuePlace
	}
	return nil
}

func (m *SIConfirm) GetConsigneeOrderNumber() string {
	if m != nil {
		return m.ConsigneeOrderNumber
	}
	return ""
}

func (m *SIConfirm) GetExportDeclaration() string {
	if m != nil {
		return m.ExportDeclaration
	}
	return ""
}

func (m *SIConfirm) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *SIConfirm) GetPaymentPlace() *Location {
	if m != nil {
		return m.PaymentPlace
	}
	return nil
}

func (m *SIConfirm) GetFourP() *FourP {
	if m != nil {
		return m.FourP
	}
	return nil
}

func (m *SIConfirm) GetEtd() int64 {
	if m != nil {
		return m.Etd
	}
	return 0
}

func (m *SIConfirm) GetEta() int64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *SIConfirm) GetActualDeparture() int64 {
	if m != nil {
		return m.ActualDeparture
	}
	return 0
}

func (m *SIConfirm) GetActualArrival() int64 {
	if m != nil {
		return m.ActualArrival
	}
	return 0
}

func (m *SIConfirm) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *SIConfirm) GetPreVessel() *Vessel {
	if m != nil {
		return m.PreVessel
	}
	return nil
}

func (m *SIConfirm) GetLetterOfCreditIssueDate() int64 {
	if m != nil {
		return m.LetterOfCreditIssueDate
	}
	return 0
}

func (m *SIConfirm) GetLetterOfCreditExpiredDate() int64 {
	if m != nil {
		return m.LetterOfCreditExpiredDate
	}
	return 0
}

func (m *SIConfirm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SIConfirm) GetPaymentInformation() *PaymentInformation {
	if m != nil {
		return m.PaymentInformation
	}
	return nil
}

func (m *SIConfirm) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type VGM struct {
	PlatformId                int64             `protobuf:"varint,1,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	CreatedBy                 int64             `protobuf:"varint,2,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ApplicationNumber         string            `protobuf:"bytes,4,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version                   int64             `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	IsDraft                   bool              `protobuf:"varint,6,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	Region                    string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	Function                  VGM_Function      `protobuf:"varint,8,opt,name=function,proto3,enum=booking.proto.VGM_Function" json:"function,omitempty"`
	Carrier                   string            `protobuf:"bytes,9,opt,name=carrier,proto3" json:"carrier,omitempty"`
	AuthorizedPersonFirstName string            `protobuf:"bytes,10,opt,name=authorized_person_first_name,json=authorizedPersonFirstName,proto3" json:"authorized_person_first_name,omitempty"`
	AuthorizedPersonLastName  string            `protobuf:"bytes,11,opt,name=authorized_person_last_name,json=authorizedPersonLastName,proto3" json:"authorized_person_last_name,omitempty"`
	Parties                   []*Party          `protobuf:"bytes,12,rep,name=parties,proto3" json:"parties,omitempty"`
	Containers                []*VGM_Container  `protobuf:"bytes,13,rep,name=containers,proto3" json:"containers,omitempty"`
	Timestamp                 int64             `protobuf:"varint,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsDeleted                 bool              `protobuf:"varint,15,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	Notes                     map[string]string `protobuf:"bytes,16,rep,name=notes,proto3" json:"notes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *VGM) Reset()         { *m = VGM{} }
func (m *VGM) String() string { return proto.CompactTextString(m) }
func (*VGM) ProtoMessage()    {}
func (*VGM) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{4}
}
func (m *VGM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VGM.Unmarshal(m, b)
}
func (m *VGM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VGM.Marshal(b, m, deterministic)
}
func (dst *VGM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VGM.Merge(dst, src)
}
func (m *VGM) XXX_Size() int {
	return xxx_messageInfo_VGM.Size(m)
}
func (m *VGM) XXX_DiscardUnknown() {
	xxx_messageInfo_VGM.DiscardUnknown(m)
}

var xxx_messageInfo_VGM proto.InternalMessageInfo

func (m *VGM) GetPlatformId() int64 {
	if m != nil {
		return m.PlatformId
	}
	return 0
}

func (m *VGM) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *VGM) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *VGM) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VGM) GetIsDraft() bool {
	if m != nil {
		return m.IsDraft
	}
	return false
}

func (m *VGM) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *VGM) GetFunction() VGM_Function {
	if m != nil {
		return m.Function
	}
	return VGM_VGM_FUNCTION_UNKNOWN
}

func (m *VGM) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *VGM) GetAuthorizedPersonFirstName() string {
	if m != nil {
		return m.AuthorizedPersonFirstName
	}
	return ""
}

func (m *VGM) GetAuthorizedPersonLastName() string {
	if m != nil {
		return m.AuthorizedPersonLastName
	}
	return ""
}

func (m *VGM) GetParties() []*Party {
	if m != nil {
		return m.Parties
	}
	return nil
}

func (m *VGM) GetContainers() []*VGM_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *VGM) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VGM) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *VGM) GetNotes() map[string]string {
	if m != nil {
		return m.Notes
	}
	return nil
}

type VGM_Container struct {
	BluexNumber          string        `protobuf:"bytes,1,opt,name=bluex_number,json=bluexNumber,proto3" json:"bluex_number,omitempty"`
	BookingNumber        string        `protobuf:"bytes,2,opt,name=booking_number,json=bookingNumber,proto3" json:"booking_number,omitempty"`
	ContainerNumber      string        `protobuf:"bytes,3,opt,name=container_number,json=containerNumber,proto3" json:"container_number,omitempty"`
	ContainerType        ContainerType `protobuf:"varint,4,opt,name=container_type,json=containerType,proto3,enum=booking.proto.ContainerType" json:"container_type,omitempty"`
	SealNumber           string        `protobuf:"bytes,5,opt,name=seal_number,json=sealNumber,proto3" json:"seal_number,omitempty"`
	SealType             SealType      `protobuf:"varint,6,opt,name=seal_type,json=sealType,proto3,enum=booking.proto.SealType" json:"seal_type,omitempty"`
	Measurement          string        `protobuf:"bytes,7,opt,name=measurement,proto3" json:"measurement,omitempty"`
	MeasurementTime      int64         `protobuf:"varint,8,opt,name=measurement_time,json=measurementTime,proto3" json:"measurement_time,omitempty"`
	VgmWeight            *Weight       `protobuf:"bytes,9,opt,name=vgm_weight,json=vgmWeight,proto3" json:"vgm_weight,omitempty"`
	CargoWeight          *Weight       `protobuf:"bytes,10,opt,name=cargo_weight,json=cargoWeight,proto3" json:"cargo_weight,omitempty"`
	TareWeight           *Weight       `protobuf:"bytes,11,opt,name=tare_weight,json=tareWeight,proto3" json:"tare_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VGM_Container) Reset()         { *m = VGM_Container{} }
func (m *VGM_Container) String() string { return proto.CompactTextString(m) }
func (*VGM_Container) ProtoMessage()    {}
func (*VGM_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{4, 0}
}
func (m *VGM_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VGM_Container.Unmarshal(m, b)
}
func (m *VGM_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VGM_Container.Marshal(b, m, deterministic)
}
func (dst *VGM_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VGM_Container.Merge(dst, src)
}
func (m *VGM_Container) XXX_Size() int {
	return xxx_messageInfo_VGM_Container.Size(m)
}
func (m *VGM_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_VGM_Container.DiscardUnknown(m)
}

var xxx_messageInfo_VGM_Container proto.InternalMessageInfo

func (m *VGM_Container) GetBluexNumber() string {
	if m != nil {
		return m.BluexNumber
	}
	return ""
}

func (m *VGM_Container) GetBookingNumber() string {
	if m != nil {
		return m.BookingNumber
	}
	return ""
}

func (m *VGM_Container) GetContainerNumber() string {
	if m != nil {
		return m.ContainerNumber
	}
	return ""
}

func (m *VGM_Container) GetContainerType() ContainerType {
	if m != nil {
		return m.ContainerType
	}
	return ContainerType_CT_NA
}

func (m *VGM_Container) GetSealNumber() string {
	if m != nil {
		return m.SealNumber
	}
	return ""
}

func (m *VGM_Container) GetSealType() SealType {
	if m != nil {
		return m.SealType
	}
	return SealType_SEAL_UNKNOWN
}

func (m *VGM_Container) GetMeasurement() string {
	if m != nil {
		return m.Measurement
	}
	return ""
}

func (m *VGM_Container) GetMeasurementTime() int64 {
	if m != nil {
		return m.MeasurementTime
	}
	return 0
}

func (m *VGM_Container) GetVgmWeight() *Weight {
	if m != nil {
		return m.VgmWeight
	}
	return nil
}

func (m *VGM_Container) GetCargoWeight() *Weight {
	if m != nil {
		return m.CargoWeight
	}
	return nil
}

func (m *VGM_Container) GetTareWeight() *Weight {
	if m != nil {
		return m.TareWeight
	}
	return nil
}

type VGMConfirm struct {
	ApplicationNumber    string                      `protobuf:"bytes,1,opt,name=application_number,json=applicationNumber,proto3" json:"application_number,omitempty"`
	Version              int64                       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Region               string                      `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Carrier              string                      `protobuf:"bytes,4,opt,name=carrier,proto3" json:"carrier,omitempty"`
	Function             ConfirmationFunction        `protobuf:"varint,5,opt,name=function,proto3,enum=booking.proto.ConfirmationFunction" json:"function,omitempty"`
	BookingNumbers       []*VGMConfirm_BookingNumber `protobuf:"bytes,6,rep,name=booking_numbers,json=bookingNumbers,proto3" json:"booking_numbers,omitempty"`
	Timestamp            int64                       `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlNumber             string                      `protobuf:"bytes,8,opt,name=bl_number,json=blNumber,proto3" json:"bl_number,omitempty"`
	Reason               string                      `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *VGMConfirm) Reset()         { *m = VGMConfirm{} }
func (m *VGMConfirm) String() string { return proto.CompactTextString(m) }
func (*VGMConfirm) ProtoMessage()    {}
func (*VGMConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{5}
}
func (m *VGMConfirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VGMConfirm.Unmarshal(m, b)
}
func (m *VGMConfirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VGMConfirm.Marshal(b, m, deterministic)
}
func (dst *VGMConfirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VGMConfirm.Merge(dst, src)
}
func (m *VGMConfirm) XXX_Size() int {
	return xxx_messageInfo_VGMConfirm.Size(m)
}
func (m *VGMConfirm) XXX_DiscardUnknown() {
	xxx_messageInfo_VGMConfirm.DiscardUnknown(m)
}

var xxx_messageInfo_VGMConfirm proto.InternalMessageInfo

func (m *VGMConfirm) GetApplicationNumber() string {
	if m != nil {
		return m.ApplicationNumber
	}
	return ""
}

func (m *VGMConfirm) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VGMConfirm) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *VGMConfirm) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *VGMConfirm) GetFunction() ConfirmationFunction {
	if m != nil {
		return m.Function
	}
	return ConfirmationFunction_CONFIRMATION_UNKNOWN
}

func (m *VGMConfirm) GetBookingNumbers() []*VGMConfirm_BookingNumber {
	if m != nil {
		return m.BookingNumbers
	}
	return nil
}

func (m *VGMConfirm) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VGMConfirm) GetBlNumber() string {
	if m != nil {
		return m.BlNumber
	}
	return ""
}

func (m *VGMConfirm) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type VGMConfirm_BookingNumber struct {
	BookingNumber        string   `protobuf:"bytes,1,opt,name=booking_number,json=bookingNumber,proto3" json:"booking_number,omitempty"`
	ContainerNumber      string   `protobuf:"bytes,2,opt,name=container_number,json=containerNumber,proto3" json:"container_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VGMConfirm_BookingNumber) Reset()         { *m = VGMConfirm_BookingNumber{} }
func (m *VGMConfirm_BookingNumber) String() string { return proto.CompactTextString(m) }
func (*VGMConfirm_BookingNumber) ProtoMessage()    {}
func (*VGMConfirm_BookingNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{5, 0}
}
func (m *VGMConfirm_BookingNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VGMConfirm_BookingNumber.Unmarshal(m, b)
}
func (m *VGMConfirm_BookingNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VGMConfirm_BookingNumber.Marshal(b, m, deterministic)
}
func (dst *VGMConfirm_BookingNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VGMConfirm_BookingNumber.Merge(dst, src)
}
func (m *VGMConfirm_BookingNumber) XXX_Size() int {
	return xxx_messageInfo_VGMConfirm_BookingNumber.Size(m)
}
func (m *VGMConfirm_BookingNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_VGMConfirm_BookingNumber.DiscardUnknown(m)
}

var xxx_messageInfo_VGMConfirm_BookingNumber proto.InternalMessageInfo

func (m *VGMConfirm_BookingNumber) GetBookingNumber() string {
	if m != nil {
		return m.BookingNumber
	}
	return ""
}

func (m *VGMConfirm_BookingNumber) GetContainerNumber() string {
	if m != nil {
		return m.ContainerNumber
	}
	return ""
}

type CarrierSchedule struct {
	Region               string                   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Voyage               string                   `protobuf:"bytes,2,opt,name=voyage,proto3" json:"voyage,omitempty"`
	SerialNum            int64                    `protobuf:"varint,3,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	Vessel               *CarrierSchedule_Vessel  `protobuf:"bytes,4,opt,name=vessel,proto3" json:"vessel,omitempty"`
	Routing              []*CarrierSchedule_Route `protobuf:"bytes,5,rep,name=routing,proto3" json:"routing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CarrierSchedule) Reset()         { *m = CarrierSchedule{} }
func (m *CarrierSchedule) String() string { return proto.CompactTextString(m) }
func (*CarrierSchedule) ProtoMessage()    {}
func (*CarrierSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{6}
}
func (m *CarrierSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarrierSchedule.Unmarshal(m, b)
}
func (m *CarrierSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarrierSchedule.Marshal(b, m, deterministic)
}
func (dst *CarrierSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarrierSchedule.Merge(dst, src)
}
func (m *CarrierSchedule) XXX_Size() int {
	return xxx_messageInfo_CarrierSchedule.Size(m)
}
func (m *CarrierSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_CarrierSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_CarrierSchedule proto.InternalMessageInfo

func (m *CarrierSchedule) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CarrierSchedule) GetVoyage() string {
	if m != nil {
		return m.Voyage
	}
	return ""
}

func (m *CarrierSchedule) GetSerialNum() int64 {
	if m != nil {
		return m.SerialNum
	}
	return 0
}

func (m *CarrierSchedule) GetVessel() *CarrierSchedule_Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *CarrierSchedule) GetRouting() []*CarrierSchedule_Route {
	if m != nil {
		return m.Routing
	}
	return nil
}

type CarrierSchedule_Route struct {
	RoutingSeq           int64     `protobuf:"varint,1,opt,name=routing_seq,json=routingSeq,proto3" json:"routing_seq,omitempty"`
	Port                 *Location `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Eta                  int64     `protobuf:"varint,3,opt,name=eta,proto3" json:"eta,omitempty"`
	Etd                  int64     `protobuf:"varint,4,opt,name=etd,proto3" json:"etd,omitempty"`
	Ata                  int64     `protobuf:"varint,5,opt,name=ata,proto3" json:"ata,omitempty"`
	Atd                  int64     `protobuf:"varint,6,opt,name=atd,proto3" json:"atd,omitempty"`
	DmlFlag              string    `protobuf:"bytes,7,opt,name=dml_flag,json=dmlFlag,proto3" json:"dml_flag,omitempty"`
	Entry                int64     `protobuf:"varint,8,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CarrierSchedule_Route) Reset()         { *m = CarrierSchedule_Route{} }
func (m *CarrierSchedule_Route) String() string { return proto.CompactTextString(m) }
func (*CarrierSchedule_Route) ProtoMessage()    {}
func (*CarrierSchedule_Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{6, 0}
}
func (m *CarrierSchedule_Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarrierSchedule_Route.Unmarshal(m, b)
}
func (m *CarrierSchedule_Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarrierSchedule_Route.Marshal(b, m, deterministic)
}
func (dst *CarrierSchedule_Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarrierSchedule_Route.Merge(dst, src)
}
func (m *CarrierSchedule_Route) XXX_Size() int {
	return xxx_messageInfo_CarrierSchedule_Route.Size(m)
}
func (m *CarrierSchedule_Route) XXX_DiscardUnknown() {
	xxx_messageInfo_CarrierSchedule_Route.DiscardUnknown(m)
}

var xxx_messageInfo_CarrierSchedule_Route proto.InternalMessageInfo

func (m *CarrierSchedule_Route) GetRoutingSeq() int64 {
	if m != nil {
		return m.RoutingSeq
	}
	return 0
}

func (m *CarrierSchedule_Route) GetPort() *Location {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *CarrierSchedule_Route) GetEta() int64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *CarrierSchedule_Route) GetEtd() int64 {
	if m != nil {
		return m.Etd
	}
	return 0
}

func (m *CarrierSchedule_Route) GetAta() int64 {
	if m != nil {
		return m.Ata
	}
	return 0
}

func (m *CarrierSchedule_Route) GetAtd() int64 {
	if m != nil {
		return m.Atd
	}
	return 0
}

func (m *CarrierSchedule_Route) GetDmlFlag() string {
	if m != nil {
		return m.DmlFlag
	}
	return ""
}

func (m *CarrierSchedule_Route) GetEntry() int64 {
	if m != nil {
		return m.Entry
	}
	return 0
}

type CarrierSchedule_Vessel struct {
	BluexVesselId        string   `protobuf:"bytes,1,opt,name=bluex_vessel_id,json=bluexVesselId,proto3" json:"bluex_vessel_id,omitempty"`
	Carrier              string   `protobuf:"bytes,2,opt,name=carrier,proto3" json:"carrier,omitempty"`
	ServiceLine          string   `protobuf:"bytes,3,opt,name=service_line,json=serviceLine,proto3" json:"service_line,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	LloydCode            string   `protobuf:"bytes,6,opt,name=lloyd_code,json=lloydCode,proto3" json:"lloyd_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarrierSchedule_Vessel) Reset()         { *m = CarrierSchedule_Vessel{} }
func (m *CarrierSchedule_Vessel) String() string { return proto.CompactTextString(m) }
func (*CarrierSchedule_Vessel) ProtoMessage()    {}
func (*CarrierSchedule_Vessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{6, 1}
}
func (m *CarrierSchedule_Vessel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarrierSchedule_Vessel.Unmarshal(m, b)
}
func (m *CarrierSchedule_Vessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarrierSchedule_Vessel.Marshal(b, m, deterministic)
}
func (dst *CarrierSchedule_Vessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarrierSchedule_Vessel.Merge(dst, src)
}
func (m *CarrierSchedule_Vessel) XXX_Size() int {
	return xxx_messageInfo_CarrierSchedule_Vessel.Size(m)
}
func (m *CarrierSchedule_Vessel) XXX_DiscardUnknown() {
	xxx_messageInfo_CarrierSchedule_Vessel.DiscardUnknown(m)
}

var xxx_messageInfo_CarrierSchedule_Vessel proto.InternalMessageInfo

func (m *CarrierSchedule_Vessel) GetBluexVesselId() string {
	if m != nil {
		return m.BluexVesselId
	}
	return ""
}

func (m *CarrierSchedule_Vessel) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *CarrierSchedule_Vessel) GetServiceLine() string {
	if m != nil {
		return m.ServiceLine
	}
	return ""
}

func (m *CarrierSchedule_Vessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CarrierSchedule_Vessel) GetLloydCode() string {
	if m != nil {
		return m.LloydCode
	}
	return ""
}

type FourP struct {
	PlaceOfReceipt       *Location `protobuf:"bytes,1,opt,name=place_of_receipt,json=placeOfReceipt,proto3" json:"place_of_receipt,omitempty"`
	PortOfLoading        *Location `protobuf:"bytes,2,opt,name=port_of_loading,json=portOfLoading,proto3" json:"port_of_loading,omitempty"`
	PortOfDischarge      *Location `protobuf:"bytes,3,opt,name=port_of_discharge,json=portOfDischarge,proto3" json:"port_of_discharge,omitempty"`
	PlaceOfDelivery      *Location `protobuf:"bytes,4,opt,name=place_of_delivery,json=placeOfDelivery,proto3" json:"place_of_delivery,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FourP) Reset()         { *m = FourP{} }
func (m *FourP) String() string { return proto.CompactTextString(m) }
func (*FourP) ProtoMessage()    {}
func (*FourP) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{7}
}
func (m *FourP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FourP.Unmarshal(m, b)
}
func (m *FourP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FourP.Marshal(b, m, deterministic)
}
func (dst *FourP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FourP.Merge(dst, src)
}
func (m *FourP) XXX_Size() int {
	return xxx_messageInfo_FourP.Size(m)
}
func (m *FourP) XXX_DiscardUnknown() {
	xxx_messageInfo_FourP.DiscardUnknown(m)
}

var xxx_messageInfo_FourP proto.InternalMessageInfo

func (m *FourP) GetPlaceOfReceipt() *Location {
	if m != nil {
		return m.PlaceOfReceipt
	}
	return nil
}

func (m *FourP) GetPortOfLoading() *Location {
	if m != nil {
		return m.PortOfLoading
	}
	return nil
}

func (m *FourP) GetPortOfDischarge() *Location {
	if m != nil {
		return m.PortOfDischarge
	}
	return nil
}

func (m *FourP) GetPlaceOfDelivery() *Location {
	if m != nil {
		return m.PlaceOfDelivery
	}
	return nil
}

type References struct {
	ShippersReferenceNumber    string   `protobuf:"bytes,1,opt,name=shippers_reference_number,json=shippersReferenceNumber,proto3" json:"shippers_reference_number,omitempty"`
	BlReferenceNumber          string   `protobuf:"bytes,2,opt,name=bl_reference_number,json=blReferenceNumber,proto3" json:"bl_reference_number,omitempty"`
	PurchaseOrderNumber        string   `protobuf:"bytes,3,opt,name=purchase_order_number,json=purchaseOrderNumber,proto3" json:"purchase_order_number,omitempty"`
	ForwardsReferenceNumber    string   `protobuf:"bytes,4,opt,name=forwards_reference_number,json=forwardsReferenceNumber,proto3" json:"forwards_reference_number,omitempty"`
	SidNumber                  string   `protobuf:"bytes,5,opt,name=sid_number,json=sidNumber,proto3" json:"sid_number,omitempty"`
	JobNumber                  string   `protobuf:"bytes,6,opt,name=job_number,json=jobNumber,proto3" json:"job_number,omitempty"`
	ConsigneeReferenceNumber   string   `protobuf:"bytes,7,opt,name=consignee_reference_number,json=consigneeReferenceNumber,proto3" json:"consignee_reference_number,omitempty"`
	TransactionReferenceNumber string   `protobuf:"bytes,8,opt,name=transaction_reference_number,json=transactionReferenceNumber,proto3" json:"transaction_reference_number,omitempty"`
	TariffNumber               string   `protobuf:"bytes,9,opt,name=tariff_number,json=tariffNumber,proto3" json:"tariff_number,omitempty"`
	ExporterReferenceNumber    string   `protobuf:"bytes,10,opt,name=exporter_reference_number,json=exporterReferenceNumber,proto3" json:"exporter_reference_number,omitempty"`
	InvoiceReferenceNumber     string   `protobuf:"bytes,11,opt,name=invoice_reference_number,json=invoiceReferenceNumber,proto3" json:"invoice_reference_number,omitempty"`
	LetterOfCreditRefernce     string   `protobuf:"bytes,12,opt,name=letter_of_credit_refernce,json=letterOfCreditRefernce,proto3" json:"letter_of_credit_refernce,omitempty"`
	BrokerReference            string   `protobuf:"bytes,13,opt,name=broker_reference,json=brokerReference,proto3" json:"broker_reference,omitempty"`
	GoverentReferenceOrFmc     string   `protobuf:"bytes,14,opt,name=goverent_reference_or_fmc,json=goverentReferenceOrFmc,proto3" json:"goverent_reference_or_fmc,omitempty"`
	ExportLicenseNumber        string   `protobuf:"bytes,15,opt,name=export_license_number,json=exportLicenseNumber,proto3" json:"export_license_number,omitempty"`
	LetterOfCreditIssueDate    int64    `protobuf:"varint,16,opt,name=letter_of_credit_issue_date,json=letterOfCreditIssueDate,proto3" json:"letter_of_credit_issue_date,omitempty"`
	LetterOfCreditExpiryDate   int64    `protobuf:"varint,17,opt,name=letter_of_credit_expiry_date,json=letterOfCreditExpiryDate,proto3" json:"letter_of_credit_expiry_date,omitempty"`
	ExportLicenseIssueDate     int64    `protobuf:"varint,18,opt,name=export_license_issue_date,json=exportLicenseIssueDate,proto3" json:"export_license_issue_date,omitempty"`
	ExportLicenseExpiryDate    int64    `protobuf:"varint,19,opt,name=export_license_expiry_date,json=exportLicenseExpiryDate,proto3" json:"export_license_expiry_date,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *References) Reset()         { *m = References{} }
func (m *References) String() string { return proto.CompactTextString(m) }
func (*References) ProtoMessage()    {}
func (*References) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{8}
}
func (m *References) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_References.Unmarshal(m, b)
}
func (m *References) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_References.Marshal(b, m, deterministic)
}
func (dst *References) XXX_Merge(src proto.Message) {
	xxx_messageInfo_References.Merge(dst, src)
}
func (m *References) XXX_Size() int {
	return xxx_messageInfo_References.Size(m)
}
func (m *References) XXX_DiscardUnknown() {
	xxx_messageInfo_References.DiscardUnknown(m)
}

var xxx_messageInfo_References proto.InternalMessageInfo

func (m *References) GetShippersReferenceNumber() string {
	if m != nil {
		return m.ShippersReferenceNumber
	}
	return ""
}

func (m *References) GetBlReferenceNumber() string {
	if m != nil {
		return m.BlReferenceNumber
	}
	return ""
}

func (m *References) GetPurchaseOrderNumber() string {
	if m != nil {
		return m.PurchaseOrderNumber
	}
	return ""
}

func (m *References) GetForwardsReferenceNumber() string {
	if m != nil {
		return m.ForwardsReferenceNumber
	}
	return ""
}

func (m *References) GetSidNumber() string {
	if m != nil {
		return m.SidNumber
	}
	return ""
}

func (m *References) GetJobNumber() string {
	if m != nil {
		return m.JobNumber
	}
	return ""
}

func (m *References) GetConsigneeReferenceNumber() string {
	if m != nil {
		return m.ConsigneeReferenceNumber
	}
	return ""
}

func (m *References) GetTransactionReferenceNumber() string {
	if m != nil {
		return m.TransactionReferenceNumber
	}
	return ""
}

func (m *References) GetTariffNumber() string {
	if m != nil {
		return m.TariffNumber
	}
	return ""
}

func (m *References) GetExporterReferenceNumber() string {
	if m != nil {
		return m.ExporterReferenceNumber
	}
	return ""
}

func (m *References) GetInvoiceReferenceNumber() string {
	if m != nil {
		return m.InvoiceReferenceNumber
	}
	return ""
}

func (m *References) GetLetterOfCreditRefernce() string {
	if m != nil {
		return m.LetterOfCreditRefernce
	}
	return ""
}

func (m *References) GetBrokerReference() string {
	if m != nil {
		return m.BrokerReference
	}
	return ""
}

func (m *References) GetGoverentReferenceOrFmc() string {
	if m != nil {
		return m.GoverentReferenceOrFmc
	}
	return ""
}

func (m *References) GetExportLicenseNumber() string {
	if m != nil {
		return m.ExportLicenseNumber
	}
	return ""
}

func (m *References) GetLetterOfCreditIssueDate() int64 {
	if m != nil {
		return m.LetterOfCreditIssueDate
	}
	return 0
}

func (m *References) GetLetterOfCreditExpiryDate() int64 {
	if m != nil {
		return m.LetterOfCreditExpiryDate
	}
	return 0
}

func (m *References) GetExportLicenseIssueDate() int64 {
	if m != nil {
		return m.ExportLicenseIssueDate
	}
	return 0
}

func (m *References) GetExportLicenseExpiryDate() int64 {
	if m != nil {
		return m.ExportLicenseExpiryDate
	}
	return 0
}

type CarriageRequirement struct {
	Vessel               *Vessel     `protobuf:"bytes,1,opt,name=vessel,proto3" json:"vessel,omitempty"`
	CutOffDate           int64       `protobuf:"varint,2,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	ServiceMode          ServiceMode `protobuf:"varint,3,opt,name=service_mode,json=serviceMode,proto3,enum=booking.proto.ServiceMode" json:"service_mode,omitempty"`
	ServiceType          ServiceType `protobuf:"varint,4,opt,name=service_type,json=serviceType,proto3,enum=booking.proto.ServiceType" json:"service_type,omitempty"`
	FourP                *FourP      `protobuf:"bytes,5,opt,name=four_p,json=fourP,proto3" json:"four_p,omitempty"`
	CarrierContactOffice *Location   `protobuf:"bytes,6,opt,name=carrier_contact_office,json=carrierContactOffice,proto3" json:"carrier_contact_office,omitempty"`
	BlIssuePlace         *Location   `protobuf:"bytes,7,opt,name=bl_issue_place,json=blIssuePlace,proto3" json:"bl_issue_place,omitempty"`
	PreVessel            *Vessel     `protobuf:"bytes,8,opt,name=pre_vessel,json=preVessel,proto3" json:"pre_vessel,omitempty"`
	DebitCode            string      `protobuf:"bytes,9,opt,name=debit_code,json=debitCode,proto3" json:"debit_code,omitempty"`
	Etd                  int64       `protobuf:"varint,10,opt,name=etd,proto3" json:"etd,omitempty"`
	Eta                  int64       `protobuf:"varint,11,opt,name=eta,proto3" json:"eta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CarriageRequirement) Reset()         { *m = CarriageRequirement{} }
func (m *CarriageRequirement) String() string { return proto.CompactTextString(m) }
func (*CarriageRequirement) ProtoMessage()    {}
func (*CarriageRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{9}
}
func (m *CarriageRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarriageRequirement.Unmarshal(m, b)
}
func (m *CarriageRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarriageRequirement.Marshal(b, m, deterministic)
}
func (dst *CarriageRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarriageRequirement.Merge(dst, src)
}
func (m *CarriageRequirement) XXX_Size() int {
	return xxx_messageInfo_CarriageRequirement.Size(m)
}
func (m *CarriageRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_CarriageRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_CarriageRequirement proto.InternalMessageInfo

func (m *CarriageRequirement) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *CarriageRequirement) GetCutOffDate() int64 {
	if m != nil {
		return m.CutOffDate
	}
	return 0
}

func (m *CarriageRequirement) GetServiceMode() ServiceMode {
	if m != nil {
		return m.ServiceMode
	}
	return ServiceMode_SERVICE_MODE_UNKNOWN
}

func (m *CarriageRequirement) GetServiceType() ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (m *CarriageRequirement) GetFourP() *FourP {
	if m != nil {
		return m.FourP
	}
	return nil
}

func (m *CarriageRequirement) GetCarrierContactOffice() *Location {
	if m != nil {
		return m.CarrierContactOffice
	}
	return nil
}

func (m *CarriageRequirement) GetBlIssuePlace() *Location {
	if m != nil {
		return m.BlIssuePlace
	}
	return nil
}

func (m *CarriageRequirement) GetPreVessel() *Vessel {
	if m != nil {
		return m.PreVessel
	}
	return nil
}

func (m *CarriageRequirement) GetDebitCode() string {
	if m != nil {
		return m.DebitCode
	}
	return ""
}

func (m *CarriageRequirement) GetEtd() int64 {
	if m != nil {
		return m.Etd
	}
	return 0
}

func (m *CarriageRequirement) GetEta() int64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

type PaymentInformation struct {
	Amount               *wrappers.DoubleValue `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string                `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	PaymentPlace         *Location             `protobuf:"bytes,3,opt,name=payment_place,json=paymentPlace,proto3" json:"payment_place,omitempty"`
	PaymentTerm          string                `protobuf:"bytes,4,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	Payer                string                `protobuf:"bytes,5,opt,name=payer,proto3" json:"payer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PaymentInformation) Reset()         { *m = PaymentInformation{} }
func (m *PaymentInformation) String() string { return proto.CompactTextString(m) }
func (*PaymentInformation) ProtoMessage()    {}
func (*PaymentInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{10}
}
func (m *PaymentInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentInformation.Unmarshal(m, b)
}
func (m *PaymentInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentInformation.Marshal(b, m, deterministic)
}
func (dst *PaymentInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentInformation.Merge(dst, src)
}
func (m *PaymentInformation) XXX_Size() int {
	return xxx_messageInfo_PaymentInformation.Size(m)
}
func (m *PaymentInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentInformation.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentInformation proto.InternalMessageInfo

func (m *PaymentInformation) GetAmount() *wrappers.DoubleValue {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *PaymentInformation) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PaymentInformation) GetPaymentPlace() *Location {
	if m != nil {
		return m.PaymentPlace
	}
	return nil
}

func (m *PaymentInformation) GetPaymentTerm() string {
	if m != nil {
		return m.PaymentTerm
	}
	return ""
}

func (m *PaymentInformation) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

type BLPrintInstructions struct {
	BlType                      BLType   `protobuf:"varint,1,opt,name=bl_type,json=blType,proto3,enum=booking.proto.BLType" json:"bl_type,omitempty"`
	BlComment                   string   `protobuf:"bytes,2,opt,name=bl_comment,json=blComment,proto3" json:"bl_comment,omitempty"`
	FreightedOriginalQuantity   int64    `protobuf:"varint,3,opt,name=freighted_original_quantity,json=freightedOriginalQuantity,proto3" json:"freighted_original_quantity,omitempty"`
	FreightedCopyQuantity       int64    `protobuf:"varint,4,opt,name=freighted_copy_quantity,json=freightedCopyQuantity,proto3" json:"freighted_copy_quantity,omitempty"`
	UnFreightedOriginalQuantity int64    `protobuf:"varint,5,opt,name=un_freighted_original_quantity,json=unFreightedOriginalQuantity,proto3" json:"un_freighted_original_quantity,omitempty"`
	UnFreightedCopyQuantity     int64    `protobuf:"varint,6,opt,name=un_freighted_copy_quantity,json=unFreightedCopyQuantity,proto3" json:"un_freighted_copy_quantity,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *BLPrintInstructions) Reset()         { *m = BLPrintInstructions{} }
func (m *BLPrintInstructions) String() string { return proto.CompactTextString(m) }
func (*BLPrintInstructions) ProtoMessage()    {}
func (*BLPrintInstructions) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{11}
}
func (m *BLPrintInstructions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BLPrintInstructions.Unmarshal(m, b)
}
func (m *BLPrintInstructions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BLPrintInstructions.Marshal(b, m, deterministic)
}
func (dst *BLPrintInstructions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BLPrintInstructions.Merge(dst, src)
}
func (m *BLPrintInstructions) XXX_Size() int {
	return xxx_messageInfo_BLPrintInstructions.Size(m)
}
func (m *BLPrintInstructions) XXX_DiscardUnknown() {
	xxx_messageInfo_BLPrintInstructions.DiscardUnknown(m)
}

var xxx_messageInfo_BLPrintInstructions proto.InternalMessageInfo

func (m *BLPrintInstructions) GetBlType() BLType {
	if m != nil {
		return m.BlType
	}
	return BLType_BL_TYPE_UNKNOWN
}

func (m *BLPrintInstructions) GetBlComment() string {
	if m != nil {
		return m.BlComment
	}
	return ""
}

func (m *BLPrintInstructions) GetFreightedOriginalQuantity() int64 {
	if m != nil {
		return m.FreightedOriginalQuantity
	}
	return 0
}

func (m *BLPrintInstructions) GetFreightedCopyQuantity() int64 {
	if m != nil {
		return m.FreightedCopyQuantity
	}
	return 0
}

func (m *BLPrintInstructions) GetUnFreightedOriginalQuantity() int64 {
	if m != nil {
		return m.UnFreightedOriginalQuantity
	}
	return 0
}

func (m *BLPrintInstructions) GetUnFreightedCopyQuantity() int64 {
	if m != nil {
		return m.UnFreightedCopyQuantity
	}
	return 0
}

type Contact struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Fax                  string   `protobuf:"bytes,4,opt,name=fax,proto3" json:"fax,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Address              string   `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{12}
}
func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (dst *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(dst, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Contact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Contact) GetFax() string {
	if m != nil {
		return m.Fax
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Contact) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CarrierContact struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Fax                  string   `protobuf:"bytes,3,opt,name=fax,proto3" json:"fax,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarrierContact) Reset()         { *m = CarrierContact{} }
func (m *CarrierContact) String() string { return proto.CompactTextString(m) }
func (*CarrierContact) ProtoMessage()    {}
func (*CarrierContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{13}
}
func (m *CarrierContact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarrierContact.Unmarshal(m, b)
}
func (m *CarrierContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarrierContact.Marshal(b, m, deterministic)
}
func (dst *CarrierContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarrierContact.Merge(dst, src)
}
func (m *CarrierContact) XXX_Size() int {
	return xxx_messageInfo_CarrierContact.Size(m)
}
func (m *CarrierContact) XXX_DiscardUnknown() {
	xxx_messageInfo_CarrierContact.DiscardUnknown(m)
}

var xxx_messageInfo_CarrierContact proto.InternalMessageInfo

func (m *CarrierContact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CarrierContact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CarrierContact) GetFax() string {
	if m != nil {
		return m.Fax
	}
	return ""
}

func (m *CarrierContact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Party struct {
	Type                 Party_Type `protobuf:"varint,1,opt,name=type,proto3,enum=booking.proto.Party_Type" json:"type,omitempty"`
	CompanyName          string     `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Contact              *Contact   `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	BookingId            string     `protobuf:"bytes,4,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	Cn24                 *CN24      `protobuf:"bytes,5,opt,name=cn24,proto3" json:"cn24,omitempty"`
	CompanyId            int64      `protobuf:"varint,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Party) Reset()         { *m = Party{} }
func (m *Party) String() string { return proto.CompactTextString(m) }
func (*Party) ProtoMessage()    {}
func (*Party) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{14}
}
func (m *Party) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Party.Unmarshal(m, b)
}
func (m *Party) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Party.Marshal(b, m, deterministic)
}
func (dst *Party) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Party.Merge(dst, src)
}
func (m *Party) XXX_Size() int {
	return xxx_messageInfo_Party.Size(m)
}
func (m *Party) XXX_DiscardUnknown() {
	xxx_messageInfo_Party.DiscardUnknown(m)
}

var xxx_messageInfo_Party proto.InternalMessageInfo

func (m *Party) GetType() Party_Type {
	if m != nil {
		return m.Type
	}
	return Party_PARTY_UNKNOWN
}

func (m *Party) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Party) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Party) GetBookingId() string {
	if m != nil {
		return m.BookingId
	}
	return ""
}

func (m *Party) GetCn24() *CN24 {
	if m != nil {
		return m.Cn24
	}
	return nil
}

func (m *Party) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

type CN24 struct {
	Type                 CN24_CodeType `protobuf:"varint,1,opt,name=type,proto3,enum=booking.proto.CN24_CodeType" json:"type,omitempty"`
	Code                 string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CountryCode          string        `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	TypeOfEnterpriseCode string        `protobuf:"bytes,4,opt,name=type_of_enterprise_code,json=typeOfEnterpriseCode,proto3" json:"type_of_enterprise_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CN24) Reset()         { *m = CN24{} }
func (m *CN24) String() string { return proto.CompactTextString(m) }
func (*CN24) ProtoMessage()    {}
func (*CN24) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{15}
}
func (m *CN24) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CN24.Unmarshal(m, b)
}
func (m *CN24) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CN24.Marshal(b, m, deterministic)
}
func (dst *CN24) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CN24.Merge(dst, src)
}
func (m *CN24) XXX_Size() int {
	return xxx_messageInfo_CN24.Size(m)
}
func (m *CN24) XXX_DiscardUnknown() {
	xxx_messageInfo_CN24.DiscardUnknown(m)
}

var xxx_messageInfo_CN24 proto.InternalMessageInfo

func (m *CN24) GetType() CN24_CodeType {
	if m != nil {
		return m.Type
	}
	return CN24_CODE_UNKNOWN
}

func (m *CN24) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CN24) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *CN24) GetTypeOfEnterpriseCode() string {
	if m != nil {
		return m.TypeOfEnterpriseCode
	}
	return ""
}

type Location struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{16}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Temperature struct {
	Unit                 TemperatureUnit `protobuf:"varint,1,opt,name=unit,proto3,enum=booking.proto.TemperatureUnit" json:"unit,omitempty"`
	Value                float64         `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Temperature) Reset()         { *m = Temperature{} }
func (m *Temperature) String() string { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()    {}
func (*Temperature) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{17}
}
func (m *Temperature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature.Unmarshal(m, b)
}
func (m *Temperature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature.Marshal(b, m, deterministic)
}
func (dst *Temperature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature.Merge(dst, src)
}
func (m *Temperature) XXX_Size() int {
	return xxx_messageInfo_Temperature.Size(m)
}
func (m *Temperature) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature proto.InternalMessageInfo

func (m *Temperature) GetUnit() TemperatureUnit {
	if m != nil {
		return m.Unit
	}
	return TemperatureUnit_TEMPERATURE_UNKNOWN
}

func (m *Temperature) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AirFlow struct {
	Unit                 AirFlowUnit `protobuf:"varint,1,opt,name=unit,proto3,enum=booking.proto.AirFlowUnit" json:"unit,omitempty"`
	Value                float64     `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AirFlow) Reset()         { *m = AirFlow{} }
func (m *AirFlow) String() string { return proto.CompactTextString(m) }
func (*AirFlow) ProtoMessage()    {}
func (*AirFlow) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{18}
}
func (m *AirFlow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirFlow.Unmarshal(m, b)
}
func (m *AirFlow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirFlow.Marshal(b, m, deterministic)
}
func (dst *AirFlow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirFlow.Merge(dst, src)
}
func (m *AirFlow) XXX_Size() int {
	return xxx_messageInfo_AirFlow.Size(m)
}
func (m *AirFlow) XXX_DiscardUnknown() {
	xxx_messageInfo_AirFlow.DiscardUnknown(m)
}

var xxx_messageInfo_AirFlow proto.InternalMessageInfo

func (m *AirFlow) GetUnit() AirFlowUnit {
	if m != nil {
		return m.Unit
	}
	return AirFlowUnit_AIRFLOW_UNKNOWN
}

func (m *AirFlow) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Weight struct {
	Unit                 WeightUnit `protobuf:"varint,1,opt,name=unit,proto3,enum=booking.proto.WeightUnit" json:"unit,omitempty"`
	Value                float64    `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Weight) Reset()         { *m = Weight{} }
func (m *Weight) String() string { return proto.CompactTextString(m) }
func (*Weight) ProtoMessage()    {}
func (*Weight) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{19}
}
func (m *Weight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Weight.Unmarshal(m, b)
}
func (m *Weight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Weight.Marshal(b, m, deterministic)
}
func (dst *Weight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weight.Merge(dst, src)
}
func (m *Weight) XXX_Size() int {
	return xxx_messageInfo_Weight.Size(m)
}
func (m *Weight) XXX_DiscardUnknown() {
	xxx_messageInfo_Weight.DiscardUnknown(m)
}

var xxx_messageInfo_Weight proto.InternalMessageInfo

func (m *Weight) GetUnit() WeightUnit {
	if m != nil {
		return m.Unit
	}
	return WeightUnit_WEIGHT_UNKNOWN
}

func (m *Weight) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Volume struct {
	Unit                 VolumeUnit `protobuf:"varint,1,opt,name=unit,proto3,enum=booking.proto.VolumeUnit" json:"unit,omitempty"`
	Value                float64    `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{20}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetUnit() VolumeUnit {
	if m != nil {
		return m.Unit
	}
	return VolumeUnit_VOLUME_UNKNOWN
}

func (m *Volume) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Measurement struct {
	Unit                 MeasurementUnit `protobuf:"varint,1,opt,name=unit,proto3,enum=booking.proto.MeasurementUnit" json:"unit,omitempty"`
	Length               float64         `protobuf:"fixed64,2,opt,name=length,proto3" json:"length,omitempty"`
	Width                float64         `protobuf:"fixed64,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               float64         `protobuf:"fixed64,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{21}
}
func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (dst *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(dst, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

func (m *Measurement) GetUnit() MeasurementUnit {
	if m != nil {
		return m.Unit
	}
	return MeasurementUnit_MEATUREMENT_UNKNOWN
}

func (m *Measurement) GetLength() float64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Measurement) GetWidth() float64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Measurement) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Package struct {
	Type                 PackageType `protobuf:"varint,1,opt,name=type,proto3,enum=booking.proto.PackageType" json:"type,omitempty"`
	Count                int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{22}
}
func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (dst *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(dst, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetType() PackageType {
	if m != nil {
		return m.Type
	}
	return PackageType_PKG_UNKNOWN
}

func (m *Package) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BookingCargo struct {
	Description          string           `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	HsCode               string           `protobuf:"bytes,2,opt,name=hs_code,json=hsCode,proto3" json:"hs_code,omitempty"`
	Marks                string           `protobuf:"bytes,3,opt,name=marks,proto3" json:"marks,omitempty"`
	DangerousGood        []*DangerousGood `protobuf:"bytes,4,rep,name=dangerous_good,json=dangerousGood,proto3" json:"dangerous_good,omitempty"`
	Package              *Package         `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`
	Volume               *Volume          `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Weight               *Weight          `protobuf:"bytes,7,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BookingCargo) Reset()         { *m = BookingCargo{} }
func (m *BookingCargo) String() string { return proto.CompactTextString(m) }
func (*BookingCargo) ProtoMessage()    {}
func (*BookingCargo) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{23}
}
func (m *BookingCargo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookingCargo.Unmarshal(m, b)
}
func (m *BookingCargo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookingCargo.Marshal(b, m, deterministic)
}
func (dst *BookingCargo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookingCargo.Merge(dst, src)
}
func (m *BookingCargo) XXX_Size() int {
	return xxx_messageInfo_BookingCargo.Size(m)
}
func (m *BookingCargo) XXX_DiscardUnknown() {
	xxx_messageInfo_BookingCargo.DiscardUnknown(m)
}

var xxx_messageInfo_BookingCargo proto.InternalMessageInfo

func (m *BookingCargo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BookingCargo) GetHsCode() string {
	if m != nil {
		return m.HsCode
	}
	return ""
}

func (m *BookingCargo) GetMarks() string {
	if m != nil {
		return m.Marks
	}
	return ""
}

func (m *BookingCargo) GetDangerousGood() []*DangerousGood {
	if m != nil {
		return m.DangerousGood
	}
	return nil
}

func (m *BookingCargo) GetPackage() *Package {
	if m != nil {
		return m.Package
	}
	return nil
}

func (m *BookingCargo) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *BookingCargo) GetWeight() *Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

type SICargo struct {
	Description          string               `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	HsCode               string               `protobuf:"bytes,2,opt,name=hs_code,json=hsCode,proto3" json:"hs_code,omitempty"`
	Marks                string               `protobuf:"bytes,3,opt,name=marks,proto3" json:"marks,omitempty"`
	DangerousGood        []*DangerousGood     `protobuf:"bytes,4,rep,name=dangerous_good,json=dangerousGood,proto3" json:"dangerous_good,omitempty"`
	Containers           []*SICargo_Container `protobuf:"bytes,5,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SICargo) Reset()         { *m = SICargo{} }
func (m *SICargo) String() string { return proto.CompactTextString(m) }
func (*SICargo) ProtoMessage()    {}
func (*SICargo) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{24}
}
func (m *SICargo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SICargo.Unmarshal(m, b)
}
func (m *SICargo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SICargo.Marshal(b, m, deterministic)
}
func (dst *SICargo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SICargo.Merge(dst, src)
}
func (m *SICargo) XXX_Size() int {
	return xxx_messageInfo_SICargo.Size(m)
}
func (m *SICargo) XXX_DiscardUnknown() {
	xxx_messageInfo_SICargo.DiscardUnknown(m)
}

var xxx_messageInfo_SICargo proto.InternalMessageInfo

func (m *SICargo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SICargo) GetHsCode() string {
	if m != nil {
		return m.HsCode
	}
	return ""
}

func (m *SICargo) GetMarks() string {
	if m != nil {
		return m.Marks
	}
	return ""
}

func (m *SICargo) GetDangerousGood() []*DangerousGood {
	if m != nil {
		return m.DangerousGood
	}
	return nil
}

func (m *SICargo) GetContainers() []*SICargo_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type SICargo_Container struct {
	BluexNumber          string                `protobuf:"bytes,1,opt,name=bluex_number,json=bluexNumber,proto3" json:"bluex_number,omitempty"`
	BookingNumber        string                `protobuf:"bytes,2,opt,name=booking_number,json=bookingNumber,proto3" json:"booking_number,omitempty"`
	ContainerNumber      string                `protobuf:"bytes,3,opt,name=container_number,json=containerNumber,proto3" json:"container_number,omitempty"`
	ContainerType        ContainerType         `protobuf:"varint,4,opt,name=container_type,json=containerType,proto3,enum=booking.proto.ContainerType" json:"container_type,omitempty"`
	SealNumber           string                `protobuf:"bytes,5,opt,name=seal_number,json=sealNumber,proto3" json:"seal_number,omitempty"`
	SealType             SealType              `protobuf:"varint,6,opt,name=seal_type,json=sealType,proto3,enum=booking.proto.SealType" json:"seal_type,omitempty"`
	ActiveReefer         bool                  `protobuf:"varint,7,opt,name=active_reefer,json=activeReefer,proto3" json:"active_reefer,omitempty"`
	Temperature          *Temperature          `protobuf:"bytes,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Vent                 bool                  `protobuf:"varint,9,opt,name=vent,proto3" json:"vent,omitempty"`
	AirFlow              *AirFlow              `protobuf:"bytes,10,opt,name=air_flow,json=airFlow,proto3" json:"air_flow,omitempty"`
	Humidity             *wrappers.DoubleValue `protobuf:"bytes,11,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Package              *Package              `protobuf:"bytes,12,opt,name=package,proto3" json:"package,omitempty"`
	Volume               *Volume               `protobuf:"bytes,13,opt,name=volume,proto3" json:"volume,omitempty"`
	Weight               *Weight               `protobuf:"bytes,14,opt,name=weight,proto3" json:"weight,omitempty"`
	Soc                  bool                  `protobuf:"varint,15,opt,name=soc,proto3" json:"soc,omitempty"`
	Measurement          *Measurement          `protobuf:"bytes,16,opt,name=measurement,proto3" json:"measurement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SICargo_Container) Reset()         { *m = SICargo_Container{} }
func (m *SICargo_Container) String() string { return proto.CompactTextString(m) }
func (*SICargo_Container) ProtoMessage()    {}
func (*SICargo_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{24, 0}
}
func (m *SICargo_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SICargo_Container.Unmarshal(m, b)
}
func (m *SICargo_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SICargo_Container.Marshal(b, m, deterministic)
}
func (dst *SICargo_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SICargo_Container.Merge(dst, src)
}
func (m *SICargo_Container) XXX_Size() int {
	return xxx_messageInfo_SICargo_Container.Size(m)
}
func (m *SICargo_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_SICargo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_SICargo_Container proto.InternalMessageInfo

func (m *SICargo_Container) GetBluexNumber() string {
	if m != nil {
		return m.BluexNumber
	}
	return ""
}

func (m *SICargo_Container) GetBookingNumber() string {
	if m != nil {
		return m.BookingNumber
	}
	return ""
}

func (m *SICargo_Container) GetContainerNumber() string {
	if m != nil {
		return m.ContainerNumber
	}
	return ""
}

func (m *SICargo_Container) GetContainerType() ContainerType {
	if m != nil {
		return m.ContainerType
	}
	return ContainerType_CT_NA
}

func (m *SICargo_Container) GetSealNumber() string {
	if m != nil {
		return m.SealNumber
	}
	return ""
}

func (m *SICargo_Container) GetSealType() SealType {
	if m != nil {
		return m.SealType
	}
	return SealType_SEAL_UNKNOWN
}

func (m *SICargo_Container) GetActiveReefer() bool {
	if m != nil {
		return m.ActiveReefer
	}
	return false
}

func (m *SICargo_Container) GetTemperature() *Temperature {
	if m != nil {
		return m.Temperature
	}
	return nil
}

func (m *SICargo_Container) GetVent() bool {
	if m != nil {
		return m.Vent
	}
	return false
}

func (m *SICargo_Container) GetAirFlow() *AirFlow {
	if m != nil {
		return m.AirFlow
	}
	return nil
}

func (m *SICargo_Container) GetHumidity() *wrappers.DoubleValue {
	if m != nil {
		return m.Humidity
	}
	return nil
}

func (m *SICargo_Container) GetPackage() *Package {
	if m != nil {
		return m.Package
	}
	return nil
}

func (m *SICargo_Container) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *SICargo_Container) GetWeight() *Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *SICargo_Container) GetSoc() bool {
	if m != nil {
		return m.Soc
	}
	return false
}

func (m *SICargo_Container) GetMeasurement() *Measurement {
	if m != nil {
		return m.Measurement
	}
	return nil
}

type DangerousGood struct {
	ImoClass1               string       `protobuf:"bytes,1,opt,name=imo_class1,json=imoClass1,proto3" json:"imo_class1,omitempty"`
	ImoClass2               string       `protobuf:"bytes,2,opt,name=imo_class2,json=imoClass2,proto3" json:"imo_class2,omitempty"`
	ImoClass3               string       `protobuf:"bytes,3,opt,name=imo_class3,json=imoClass3,proto3" json:"imo_class3,omitempty"`
	UdngNumber              string       `protobuf:"bytes,4,opt,name=udng_number,json=udngNumber,proto3" json:"udng_number,omitempty"`
	HazardPageNumber        string       `protobuf:"bytes,5,opt,name=hazard_page_number,json=hazardPageNumber,proto3" json:"hazard_page_number,omitempty"`
	PackingGroup            string       `protobuf:"bytes,6,opt,name=packing_group,json=packingGroup,proto3" json:"packing_group,omitempty"`
	FlashPoint              *Temperature `protobuf:"bytes,7,opt,name=flash_point,json=flashPoint,proto3" json:"flash_point,omitempty"`
	EmsNumber               string       `protobuf:"bytes,8,opt,name=ems_number,json=emsNumber,proto3" json:"ems_number,omitempty"`
	TremCardNumber          string       `protobuf:"bytes,9,opt,name=trem_card_number,json=tremCardNumber,proto3" json:"trem_card_number,omitempty"`
	AggregationState        string       `protobuf:"bytes,10,opt,name=aggregation_state,json=aggregationState,proto3" json:"aggregation_state,omitempty"`
	HazardCodeVersionNumber string       `protobuf:"bytes,11,opt,name=hazard_code_version_number,json=hazardCodeVersionNumber,proto3" json:"hazard_code_version_number,omitempty"`
	PackingDetails          string       `protobuf:"bytes,12,opt,name=packing_details,json=packingDetails,proto3" json:"packing_details,omitempty"`
	HazmatComment           string       `protobuf:"bytes,13,opt,name=hazmat_comment,json=hazmatComment,proto3" json:"hazmat_comment,omitempty"`
	Contacts                []*Contact   `protobuf:"bytes,14,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}     `json:"-"`
	XXX_unrecognized        []byte       `json:"-"`
	XXX_sizecache           int32        `json:"-"`
}

func (m *DangerousGood) Reset()         { *m = DangerousGood{} }
func (m *DangerousGood) String() string { return proto.CompactTextString(m) }
func (*DangerousGood) ProtoMessage()    {}
func (*DangerousGood) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{25}
}
func (m *DangerousGood) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DangerousGood.Unmarshal(m, b)
}
func (m *DangerousGood) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DangerousGood.Marshal(b, m, deterministic)
}
func (dst *DangerousGood) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DangerousGood.Merge(dst, src)
}
func (m *DangerousGood) XXX_Size() int {
	return xxx_messageInfo_DangerousGood.Size(m)
}
func (m *DangerousGood) XXX_DiscardUnknown() {
	xxx_messageInfo_DangerousGood.DiscardUnknown(m)
}

var xxx_messageInfo_DangerousGood proto.InternalMessageInfo

func (m *DangerousGood) GetImoClass1() string {
	if m != nil {
		return m.ImoClass1
	}
	return ""
}

func (m *DangerousGood) GetImoClass2() string {
	if m != nil {
		return m.ImoClass2
	}
	return ""
}

func (m *DangerousGood) GetImoClass3() string {
	if m != nil {
		return m.ImoClass3
	}
	return ""
}

func (m *DangerousGood) GetUdngNumber() string {
	if m != nil {
		return m.UdngNumber
	}
	return ""
}

func (m *DangerousGood) GetHazardPageNumber() string {
	if m != nil {
		return m.HazardPageNumber
	}
	return ""
}

func (m *DangerousGood) GetPackingGroup() string {
	if m != nil {
		return m.PackingGroup
	}
	return ""
}

func (m *DangerousGood) GetFlashPoint() *Temperature {
	if m != nil {
		return m.FlashPoint
	}
	return nil
}

func (m *DangerousGood) GetEmsNumber() string {
	if m != nil {
		return m.EmsNumber
	}
	return ""
}

func (m *DangerousGood) GetTremCardNumber() string {
	if m != nil {
		return m.TremCardNumber
	}
	return ""
}

func (m *DangerousGood) GetAggregationState() string {
	if m != nil {
		return m.AggregationState
	}
	return ""
}

func (m *DangerousGood) GetHazardCodeVersionNumber() string {
	if m != nil {
		return m.HazardCodeVersionNumber
	}
	return ""
}

func (m *DangerousGood) GetPackingDetails() string {
	if m != nil {
		return m.PackingDetails
	}
	return ""
}

func (m *DangerousGood) GetHazmatComment() string {
	if m != nil {
		return m.HazmatComment
	}
	return ""
}

func (m *DangerousGood) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type Vessel struct {
	BluexVesselId        string   `protobuf:"bytes,1,opt,name=bluex_vessel_id,json=bluexVesselId,proto3" json:"bluex_vessel_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Voyage               string   `protobuf:"bytes,3,opt,name=voyage,proto3" json:"voyage,omitempty"`
	LloydCode            string   `protobuf:"bytes,4,opt,name=lloyd_code,json=lloydCode,proto3" json:"lloyd_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vessel) Reset()         { *m = Vessel{} }
func (m *Vessel) String() string { return proto.CompactTextString(m) }
func (*Vessel) ProtoMessage()    {}
func (*Vessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_booking_event_a8816ec186e2dae5, []int{26}
}
func (m *Vessel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vessel.Unmarshal(m, b)
}
func (m *Vessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vessel.Marshal(b, m, deterministic)
}
func (dst *Vessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vessel.Merge(dst, src)
}
func (m *Vessel) XXX_Size() int {
	return xxx_messageInfo_Vessel.Size(m)
}
func (m *Vessel) XXX_DiscardUnknown() {
	xxx_messageInfo_Vessel.DiscardUnknown(m)
}

var xxx_messageInfo_Vessel proto.InternalMessageInfo

func (m *Vessel) GetBluexVesselId() string {
	if m != nil {
		return m.BluexVesselId
	}
	return ""
}

func (m *Vessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vessel) GetVoyage() string {
	if m != nil {
		return m.Voyage
	}
	return ""
}

func (m *Vessel) GetLloydCode() string {
	if m != nil {
		return m.LloydCode
	}
	return ""
}

func init() {
	proto.RegisterType((*Booking)(nil), "booking.proto.Booking")
	proto.RegisterMapType((map[string]string)(nil), "booking.proto.Booking.NotesEntry")
	proto.RegisterType((*Booking_ContainerRequest)(nil), "booking.proto.Booking.ContainerRequest")
	proto.RegisterType((*BookingConfirm)(nil), "booking.proto.BookingConfirm")
	proto.RegisterType((*BookingConfirm_Container)(nil), "booking.proto.BookingConfirm.Container")
	proto.RegisterType((*BookingConfirm_Depot)(nil), "booking.proto.BookingConfirm.Depot")
	proto.RegisterType((*SI)(nil), "booking.proto.SI")
	proto.RegisterMapType((map[string]string)(nil), "booking.proto.SI.NotesEntry")
	proto.RegisterType((*SIConfirm)(nil), "booking.proto.SIConfirm")
	proto.RegisterType((*VGM)(nil), "booking.proto.VGM")
	proto.RegisterMapType((map[string]string)(nil), "booking.proto.VGM.NotesEntry")
	proto.RegisterType((*VGM_Container)(nil), "booking.proto.VGM.Container")
	proto.RegisterType((*VGMConfirm)(nil), "booking.proto.VGMConfirm")
	proto.RegisterType((*VGMConfirm_BookingNumber)(nil), "booking.proto.VGMConfirm.BookingNumber")
	proto.RegisterType((*CarrierSchedule)(nil), "booking.proto.CarrierSchedule")
	proto.RegisterType((*CarrierSchedule_Route)(nil), "booking.proto.CarrierSchedule.Route")
	proto.RegisterType((*CarrierSchedule_Vessel)(nil), "booking.proto.CarrierSchedule.Vessel")
	proto.RegisterType((*FourP)(nil), "booking.proto.FourP")
	proto.RegisterType((*References)(nil), "booking.proto.References")
	proto.RegisterType((*CarriageRequirement)(nil), "booking.proto.CarriageRequirement")
	proto.RegisterType((*PaymentInformation)(nil), "booking.proto.PaymentInformation")
	proto.RegisterType((*BLPrintInstructions)(nil), "booking.proto.BLPrintInstructions")
	proto.RegisterType((*Contact)(nil), "booking.proto.Contact")
	proto.RegisterType((*CarrierContact)(nil), "booking.proto.CarrierContact")
	proto.RegisterType((*Party)(nil), "booking.proto.Party")
	proto.RegisterType((*CN24)(nil), "booking.proto.CN24")
	proto.RegisterType((*Location)(nil), "booking.proto.Location")
	proto.RegisterType((*Temperature)(nil), "booking.proto.Temperature")
	proto.RegisterType((*AirFlow)(nil), "booking.proto.AirFlow")
	proto.RegisterType((*Weight)(nil), "booking.proto.Weight")
	proto.RegisterType((*Volume)(nil), "booking.proto.Volume")
	proto.RegisterType((*Measurement)(nil), "booking.proto.Measurement")
	proto.RegisterType((*Package)(nil), "booking.proto.Package")
	proto.RegisterType((*BookingCargo)(nil), "booking.proto.BookingCargo")
	proto.RegisterType((*SICargo)(nil), "booking.proto.SICargo")
	proto.RegisterType((*SICargo_Container)(nil), "booking.proto.SICargo.Container")
	proto.RegisterType((*DangerousGood)(nil), "booking.proto.DangerousGood")
	proto.RegisterType((*Vessel)(nil), "booking.proto.Vessel")
	proto.RegisterEnum("booking.proto.ContainerType", ContainerType_name, ContainerType_value)
	proto.RegisterEnum("booking.proto.ServiceMode", ServiceMode_name, ServiceMode_value)
	proto.RegisterEnum("booking.proto.ServiceType", ServiceType_name, ServiceType_value)
	proto.RegisterEnum("booking.proto.BLType", BLType_name, BLType_value)
	proto.RegisterEnum("booking.proto.ConfirmationFunction", ConfirmationFunction_name, ConfirmationFunction_value)
	proto.RegisterEnum("booking.proto.TemperatureUnit", TemperatureUnit_name, TemperatureUnit_value)
	proto.RegisterEnum("booking.proto.AirFlowUnit", AirFlowUnit_name, AirFlowUnit_value)
	proto.RegisterEnum("booking.proto.VolumeUnit", VolumeUnit_name, VolumeUnit_value)
	proto.RegisterEnum("booking.proto.WeightUnit", WeightUnit_name, WeightUnit_value)
	proto.RegisterEnum("booking.proto.MeasurementUnit", MeasurementUnit_name, MeasurementUnit_value)
	proto.RegisterEnum("booking.proto.PackageType", PackageType_name, PackageType_value)
	proto.RegisterEnum("booking.proto.SealType", SealType_name, SealType_value)
	proto.RegisterEnum("booking.proto.Booking_Function", Booking_Function_name, Booking_Function_value)
	proto.RegisterEnum("booking.proto.SI_Function", SI_Function_name, SI_Function_value)
	proto.RegisterEnum("booking.proto.VGM_Function", VGM_Function_name, VGM_Function_value)
	proto.RegisterEnum("booking.proto.Party_Type", Party_Type_name, Party_Type_value)
	proto.RegisterEnum("booking.proto.CN24_CodeType", CN24_CodeType_name, CN24_CodeType_value)
}

func init() {
	proto.RegisterFile("booking_proto/booking_event.proto", fileDescriptor_booking_event_a8816ec186e2dae5)
}

var fileDescriptor_booking_event_a8816ec186e2dae5 = []byte{
	// 5620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7c, 0x7d, 0x6c, 0x64, 0x57,
	0x79, 0x37, 0xf3, 0x61, 0xcf, 0xcc, 0x33, 0x1e, 0xfb, 0xf8, 0xda, 0x6b, 0xcf, 0x7a, 0x77, 0x93,
	0x5d, 0xe7, 0xe5, 0xdd, 0x65, 0x69, 0x1c, 0xef, 0xd8, 0xbb, 0xec, 0x26, 0x21, 0x30, 0x1e, 0xcf,
	0xd8, 0x93, 0xf5, 0x7c, 0xec, 0x9d, 0xb1, 0x77, 0x17, 0xa9, 0xbd, 0xba, 0x9e, 0x39, 0x33, 0xbe,
	0xec, 0xcc, 0xdc, 0xc9, 0xbd, 0x77, 0xbc, 0x31, 0x14, 0x29, 0x45, 0x50, 0x4a, 0x9b, 0x56, 0x41,
	0x0a, 0x55, 0xda, 0x06, 0x04, 0x52, 0x84, 0x52, 0x89, 0xd2, 0xa0, 0x46, 0x88, 0xaa, 0xd0, 0x46,
	0x2d, 0x85, 0x50, 0x10, 0x8d, 0x04, 0x88, 0x0a, 0xd4, 0x36, 0x42, 0x41, 0x44, 0x15, 0x2a, 0xa8,
	0x42, 0x90, 0x56, 0x69, 0xa9, 0xce, 0xd7, 0xbd, 0xe7, 0xce, 0xcc, 0x7a, 0xed, 0x84, 0x56, 0x20,
	0xf5, 0x0f, 0x6b, 0xce, 0xf3, 0x75, 0xbe, 0xee, 0x73, 0x9e, 0xf3, 0x3b, 0xcf, 0x39, 0x32, 0x9c,
	0xda, 0x36, 0xcd, 0x1b, 0x46, 0xa7, 0xa9, 0x75, 0x2d, 0xd3, 0x31, 0xef, 0x11, 0x14, 0xde, 0xc5,
	0x1d, 0x67, 0x81, 0xf2, 0x94, 0x04, 0x67, 0x32, 0x72, 0xee, 0x8e, 0xa6, 0x69, 0x36, 0x5b, 0xf8,
	0x1e, 0x4a, 0x6d, 0xf7, 0x1a, 0xf7, 0xdc, 0xb4, 0xf4, 0x6e, 0x17, 0x5b, 0x36, 0x93, 0xcf, 0x7f,
	0x67, 0x0c, 0x22, 0x2b, 0xcc, 0x42, 0xb9, 0x13, 0xe2, 0xdd, 0x96, 0xee, 0x34, 0x4c, 0xab, 0xad,
	0x19, 0xf5, 0x64, 0xe0, 0x64, 0xe0, 0x4c, 0x48, 0x05, 0xc1, 0xca, 0xd7, 0x95, 0x13, 0x00, 0x35,
	0x0b, 0xeb, 0x0e, 0xae, 0x6b, 0xdb, 0x7b, 0xc9, 0x20, 0x95, 0xc7, 0x38, 0x67, 0x65, 0x4f, 0xb9,
	0x1b, 0x14, 0xbd, 0xdb, 0x6d, 0x19, 0x35, 0xdd, 0x31, 0xcc, 0x8e, 0xd6, 0xe9, 0xb5, 0xb7, 0xb1,
	0x95, 0x0c, 0x9f, 0x0c, 0x9c, 0x89, 0xa9, 0x93, 0x92, 0xa4, 0x48, 0x05, 0x4a, 0x12, 0x22, 0xbb,
	0xd8, 0xb2, 0x0d, 0xb3, 0x93, 0x1c, 0xa1, 0x55, 0x09, 0x52, 0x39, 0x0a, 0x51, 0xc3, 0xd6, 0xea,
	0x96, 0xde, 0x70, 0x92, 0xa3, 0x27, 0x03, 0x67, 0xa2, 0x6a, 0xc4, 0xb0, 0x57, 0x09, 0xa9, 0xdc,
	0x07, 0xd1, 0x46, 0xaf, 0x53, 0x23, 0xd5, 0x24, 0x23, 0x27, 0x03, 0x67, 0xc6, 0x53, 0x77, 0x2e,
	0xf8, 0x46, 0xbc, 0xc0, 0x47, 0xb3, 0x90, 0xe3, 0x6a, 0xaa, 0x6b, 0xa0, 0xcc, 0xc0, 0xa8, 0x85,
	0x9b, 0xc4, 0x34, 0x4a, 0x3b, 0xc5, 0x29, 0xd2, 0x93, 0x9a, 0x6e, 0x59, 0x06, 0xb6, 0x92, 0x31,
	0x2a, 0x10, 0xa4, 0x72, 0x1a, 0x26, 0x6a, 0x66, 0xc7, 0xb1, 0xf4, 0x9a, 0x23, 0xc6, 0x03, 0x54,
	0x63, 0x5c, 0xb0, 0xf9, 0x60, 0xde, 0x08, 0xe3, 0xe2, 0x6b, 0x70, 0xbd, 0x38, 0xd5, 0x13, 0x9f,
	0x83, 0xab, 0xdd, 0x05, 0x82, 0xa1, 0xe9, 0x4d, 0xdc, 0x71, 0x92, 0x63, 0x54, 0x6b, 0x8c, 0x33,
	0xd3, 0x84, 0xc7, 0xba, 0xd9, 0xd6, 0xad, 0x1b, 0xc9, 0x84, 0xe8, 0x26, 0xa1, 0x94, 0x7b, 0x60,
	0x0a, 0xb7, 0x75, 0xa3, 0xa5, 0x75, 0x4c, 0xc7, 0x68, 0xf0, 0xc9, 0xb4, 0x93, 0xe3, 0x54, 0x49,
	0xa1, 0xa2, 0xa2, 0x2c, 0x51, 0x2e, 0x01, 0x58, 0xb8, 0x81, 0x2d, 0xdc, 0xa9, 0x61, 0x3b, 0x39,
	0x71, 0x32, 0x70, 0x26, 0x9e, 0x3a, 0xda, 0x37, 0x5d, 0xaa, 0xab, 0xa0, 0x4a, 0xca, 0xca, 0x26,
	0x4c, 0xd3, 0x39, 0xd0, 0x9b, 0x58, 0xb3, 0xf0, 0x43, 0x3d, 0xc3, 0xc2, 0x6d, 0xd2, 0x5f, 0x44,
	0x2b, 0x99, 0xef, 0xab, 0x24, 0xc3, 0x55, 0x55, 0x4f, 0x53, 0x9d, 0xaa, 0x0d, 0x32, 0x15, 0x15,
	0xa6, 0xba, 0xfa, 0x1e, 0x29, 0x6a, 0x46, 0x87, 0x78, 0x15, 0xed, 0x69, 0x72, 0x92, 0xd6, 0x7a,
	0xaa, 0xaf, 0xd6, 0x32, 0xd3, 0xcc, 0x7b, 0x8a, 0xaa, 0xd2, 0x1d, 0xe0, 0x29, 0x0b, 0x10, 0xe9,
	0xea, 0x96, 0x63, 0x60, 0x3b, 0xa9, 0x9c, 0x0c, 0x9d, 0x89, 0xa7, 0xa6, 0x07, 0xea, 0xb1, 0x9c,
	0x3d, 0x55, 0x28, 0x29, 0x5b, 0xa0, 0x90, 0x8f, 0xa7, 0x1b, 0x1d, 0x6c, 0xd1, 0xb1, 0x61, 0xdb,
	0xb1, 0x93, 0x53, 0xd4, 0xf4, 0xf4, 0x2d, 0x9c, 0x29, 0x23, 0x0c, 0x54, 0xa6, 0xaf, 0x4e, 0xd6,
	0xfa, 0x38, 0xb6, 0xb2, 0x04, 0xa3, 0x35, 0xdd, 0x6a, 0x9a, 0x76, 0x72, 0x9a, 0xd6, 0x75, 0x6c,
	0x78, 0x5d, 0x19, 0xa2, 0xa3, 0x72, 0x55, 0xe5, 0x38, 0xc4, 0x1c, 0xa3, 0x8d, 0x6d, 0x47, 0x6f,
	0x77, 0x93, 0x47, 0xd8, 0x8a, 0x72, 0x19, 0x64, 0xc1, 0x91, 0x85, 0x80, 0x5b, 0xd8, 0xc1, 0xf5,
	0xe4, 0x0c, 0x5d, 0x0a, 0x31, 0xc3, 0x5e, 0x65, 0x0c, 0xe5, 0x2d, 0x30, 0xd2, 0x31, 0x1d, 0x6c,
	0x27, 0x67, 0x69, 0x83, 0xa7, 0x6e, 0xd1, 0xf9, 0x22, 0xd1, 0xc9, 0x76, 0x1c, 0x6b, 0x4f, 0x65,
	0xfa, 0xd4, 0x0d, 0x5b, 0x3d, 0xfc, 0x30, 0xf7, 0x55, 0x3b, 0x99, 0x3c, 0x19, 0xa2, 0x6e, 0x48,
	0x98, 0xcc, 0x55, 0xed, 0xb9, 0xf7, 0x86, 0x00, 0xf5, 0x8f, 0x5b, 0x99, 0x83, 0xe8, 0x43, 0x3d,
	0xbd, 0xe3, 0x18, 0xce, 0x1e, 0x0f, 0x10, 0x2e, 0xad, 0x2c, 0x42, 0xd8, 0xd9, 0xeb, 0x62, 0x1a,
	0x18, 0xc6, 0x53, 0xc7, 0xfb, 0x7d, 0x44, 0x54, 0x55, 0xdd, 0xeb, 0x62, 0x95, 0x6a, 0x92, 0x7e,
	0xe8, 0x35, 0xc7, 0xd8, 0x25, 0x3e, 0x46, 0x7c, 0x2f, 0x19, 0xa2, 0x43, 0x1c, 0x63, 0x4c, 0x95,
	0xf2, 0x94, 0xfb, 0x21, 0xee, 0xe0, 0x76, 0x17, 0x5b, 0xba, 0xd3, 0xb3, 0x30, 0x8d, 0x27, 0xf1,
	0xd4, 0x5c, 0x5f, 0xed, 0x55, 0x4f, 0x43, 0x95, 0xd5, 0x15, 0x05, 0xc2, 0x24, 0x3a, 0xd2, 0x10,
	0x13, 0x55, 0x69, 0x59, 0x39, 0x07, 0x51, 0xdd, 0xb0, 0xb4, 0x46, 0xcb, 0xbc, 0x49, 0xe3, 0x4b,
	0x3c, 0x35, 0xd3, 0x57, 0x5d, 0xda, 0xb0, 0x72, 0x2d, 0xf3, 0xa6, 0x1a, 0xd1, 0x59, 0x41, 0xb9,
	0x08, 0xd1, 0x9d, 0x5e, 0xdb, 0xa8, 0x93, 0x71, 0x47, 0xa8, 0xc9, 0xf1, 0x05, 0x16, 0x5a, 0x17,
	0x44, 0x68, 0x5d, 0x58, 0x35, 0x7b, 0xdb, 0x2d, 0xbc, 0xa5, 0xb7, 0x7a, 0x58, 0x75, 0xb5, 0x49,
	0xf7, 0xdb, 0x58, 0xb7, 0x7b, 0x7c, 0x01, 0x45, 0x87, 0x76, 0xbf, 0xe0, 0x69, 0xa8, 0xb2, 0xfa,
	0xdc, 0x45, 0x00, 0xef, 0xf3, 0x29, 0x08, 0x42, 0x37, 0x30, 0x9b, 0xf8, 0x98, 0x4a, 0x8a, 0xca,
	0x34, 0x8c, 0xec, 0x92, 0x06, 0xe9, 0xa4, 0xc7, 0x54, 0x46, 0xdc, 0x1b, 0xbc, 0x18, 0x98, 0xff,
	0x75, 0x88, 0x8a, 0x10, 0xa8, 0x1c, 0x87, 0xe4, 0x4a, 0xa9, 0x74, 0x39, 0x5f, 0x5c, 0xd3, 0x72,
	0x9b, 0xc5, 0x4c, 0x35, 0x5f, 0x2a, 0x6a, 0x9b, 0xc5, 0xcb, 0xc5, 0xd2, 0xd5, 0x22, 0x7a, 0x83,
	0x92, 0x84, 0xe9, 0x01, 0x69, 0x31, 0x7b, 0x15, 0x05, 0x94, 0x63, 0x30, 0x3b, 0x68, 0x57, 0x5e,
	0x4d, 0x57, 0xb3, 0x28, 0x38, 0x54, 0x98, 0x49, 0x17, 0x33, 0xd9, 0x0d, 0x14, 0x7a, 0x30, 0x1c,
	0x0d, 0xa1, 0xf0, 0xfc, 0x97, 0xe2, 0x30, 0x2e, 0xdc, 0xde, 0xec, 0x34, 0x0c, 0xab, 0x7d, 0x8b,
	0x4d, 0x22, 0x70, 0x80, 0x4d, 0x22, 0xe8, 0xdf, 0x24, 0xbc, 0x60, 0x1e, 0xba, 0x55, 0x30, 0x0f,
	0xfb, 0x83, 0xf9, 0x60, 0x8c, 0x1e, 0x19, 0x16, 0xa3, 0x8f, 0x41, 0x6c, 0xbb, 0x25, 0x34, 0x46,
	0xa9, 0x46, 0x74, 0xbb, 0xc5, 0x85, 0x6f, 0x1b, 0xd8, 0x7f, 0xee, 0x1a, 0xf4, 0x73, 0x32, 0x50,
	0x3a, 0x88, 0x21, 0x7b, 0xd0, 0x90, 0x1d, 0x25, 0x3a, 0x74, 0x47, 0xb9, 0x0b, 0x12, 0x16, 0xb6,
	0xbb, 0x66, 0xc7, 0xc6, 0x5a, 0xcd, 0xac, 0x63, 0xbe, 0x35, 0x8d, 0x09, 0x66, 0xc6, 0xac, 0x63,
	0x25, 0x07, 0x13, 0x7c, 0x74, 0x1a, 0x0d, 0x48, 0x35, 0x87, 0xee, 0x4f, 0xf1, 0xd4, 0x89, 0x61,
	0x11, 0x1a, 0x5b, 0x19, 0xa6, 0xa4, 0x8e, 0xd7, 0x7c, 0xb4, 0xf2, 0x56, 0x18, 0xb3, 0xb1, 0xb5,
	0x6b, 0xd4, 0xb0, 0xd6, 0x26, 0x6d, 0xc5, 0xe9, 0xd0, 0xfa, 0xbd, 0xb4, 0xc2, 0x54, 0x0a, 0x66,
	0x1d, 0xab, 0x71, 0xdb, 0x23, 0xa4, 0x1d, 0x6b, 0xcc, 0xb7, 0x63, 0x79, 0x21, 0x31, 0x71, 0xf0,
	0x90, 0xb8, 0x06, 0xe0, 0x06, 0x57, 0xb2, 0xbb, 0xed, 0x13, 0x97, 0xf9, 0x5c, 0x4b, 0xe1, 0x59,
	0x32, 0x95, 0x37, 0x86, 0x89, 0x83, 0x6c, 0x0c, 0x77, 0xc3, 0xe8, 0x2e, 0xb6, 0x6d, 0xdc, 0xe2,
	0xbb, 0xdc, 0x91, 0x3e, 0xf5, 0x2d, 0x2a, 0x54, 0xb9, 0x92, 0xb2, 0x0c, 0xd0, 0xb5, 0xb0, 0xc6,
	0x4d, 0x26, 0xf7, 0x33, 0x89, 0x75, 0x2d, 0xcc, 0x8a, 0xca, 0x9b, 0x61, 0xb4, 0x61, 0xf6, 0x2c,
	0xad, 0x9b, 0x54, 0xa8, 0x45, 0x7f, 0x9f, 0x72, 0x66, 0xcf, 0x2a, 0xab, 0x23, 0x44, 0xa7, 0x4c,
	0xd6, 0x3b, 0x76, 0xea, 0xc9, 0x29, 0xea, 0xf9, 0xa4, 0xc8, 0x38, 0x7a, 0x72, 0x5a, 0x70, 0x74,
	0x25, 0x07, 0x63, 0x5d, 0xa3, 0x76, 0xa3, 0xd7, 0xd5, 0xea, 0xb8, 0x6b, 0x3a, 0x74, 0x13, 0x89,
	0x0f, 0x78, 0x65, 0xdf, 0x84, 0xad, 0x12, 0x55, 0x35, 0xce, 0x0c, 0x29, 0x41, 0xea, 0xb1, 0xb0,
	0xd3, 0xb3, 0x3a, 0xbc, 0x9e, 0x99, 0x43, 0xd4, 0xc3, 0x0c, 0x59, 0x3d, 0x92, 0x2b, 0xd1, 0xdd,
	0x60, 0x76, 0x3f, 0x57, 0xa2, 0x7b, 0x81, 0x70, 0x25, 0x42, 0xf8, 0x37, 0xc4, 0x64, 0xff, 0x86,
	0x48, 0x1d, 0x4d, 0xb7, 0xcd, 0x4e, 0xf2, 0xa8, 0x70, 0x34, 0x42, 0x29, 0x29, 0x38, 0x62, 0xef,
	0x18, 0xdd, 0x2e, 0x59, 0xdb, 0xa6, 0x55, 0xc7, 0x96, 0x58, 0x5b, 0x73, 0x54, 0x6d, 0x4a, 0x08,
	0x4b, 0x44, 0xc6, 0x17, 0xd8, 0x12, 0xcc, 0x78, 0x38, 0xa0, 0xd6, 0x73, 0x34, 0xb3, 0xd1, 0xd0,
	0xea, 0xba, 0x83, 0x93, 0xc7, 0x68, 0xb3, 0x53, 0xae, 0x34, 0xd3, 0x73, 0x4a, 0x8d, 0xc6, 0xaa,
	0xee, 0x60, 0xe5, 0x8d, 0x30, 0x61, 0x1b, 0x7e, 0xed, 0xe3, 0x54, 0x7b, 0xcc, 0x36, 0x24, 0xb5,
	0xd3, 0x80, 0x76, 0x9b, 0x6d, 0xbf, 0xde, 0x09, 0xaa, 0x97, 0xd8, 0x6d, 0xb6, 0x3d, 0xc5, 0xb9,
	0xeb, 0x10, 0x73, 0x9d, 0xf7, 0xe7, 0xbb, 0xb9, 0xce, 0x5d, 0x86, 0x11, 0xf6, 0x45, 0xa6, 0x61,
	0x84, 0x7d, 0x52, 0x16, 0x65, 0x19, 0x41, 0xe3, 0xa4, 0xd9, 0xee, 0xea, 0x9d, 0x3d, 0xbe, 0x77,
	0x08, 0x92, 0x6c, 0x99, 0x37, 0x77, 0x30, 0x8b, 0xab, 0x21, 0x95, 0x96, 0xe7, 0xbf, 0x14, 0x85,
	0x60, 0x25, 0xff, 0x4b, 0x71, 0x44, 0xf0, 0x36, 0x86, 0x88, 0x6f, 0x63, 0xb8, 0x20, 0x85, 0xee,
	0xe8, 0x70, 0xa7, 0xcc, 0x0f, 0x3b, 0x35, 0xfc, 0x1c, 0x4e, 0x07, 0x27, 0x00, 0xda, 0xad, 0x6d,
	0xff, 0xc9, 0x20, 0xd6, 0x6e, 0x6d, 0x73, 0xb1, 0x14, 0xa8, 0xc6, 0x0e, 0x12, 0xa8, 0xfc, 0xb8,
	0x3e, 0xf1, 0xf3, 0xc0, 0xf5, 0xe3, 0xff, 0x23, 0xb8, 0x7e, 0xe2, 0xf5, 0xe0, 0xfa, 0x2d, 0x38,
	0xb2, 0xdd, 0xd2, 0xba, 0x96, 0x41, 0x2b, 0xb5, 0x1d, 0xab, 0x57, 0x63, 0x07, 0x9e, 0xe1, 0x67,
	0x90, 0x95, 0x8d, 0x32, 0x51, 0xcd, 0x4b, 0x9a, 0xea, 0xd4, 0x76, 0x6b, 0x80, 0xa9, 0x2c, 0xb8,
	0x9b, 0xd2, 0x24, 0x9d, 0xec, 0x99, 0x01, 0x2f, 0xd8, 0x07, 0xa2, 0x2b, 0xfb, 0x43, 0xf4, 0xa9,
	0x7e, 0x88, 0x9e, 0x12, 0x10, 0x9d, 0x9d, 0x09, 0x8e, 0x0f, 0x7a, 0xdc, 0x20, 0x3a, 0xbf, 0x65,
	0x30, 0x3b, 0x72, 0xcb, 0x60, 0xf6, 0x3a, 0x70, 0xe2, 0x8e, 0x84, 0x13, 0x67, 0x61, 0xaa, 0x92,
	0x1f, 0x06, 0x11, 0xa7, 0x60, 0x42, 0x16, 0x30, 0x74, 0x38, 0x03, 0x8a, 0x4f, 0x5b, 0x00, 0xc3,
	0x3e, 0x7e, 0x1f, 0x26, 0x7c, 0x3a, 0x0e, 0xb1, 0x4a, 0xfe, 0x7f, 0x0d, 0x0e, 0xca, 0x80, 0x2d,
	0xfc, 0x5a, 0x00, 0xdb, 0x10, 0x88, 0x35, 0xf2, 0x5a, 0x20, 0x96, 0x14, 0x46, 0x46, 0xfd, 0x61,
	0xc4, 0x73, 0xc8, 0xc8, 0x81, 0x1c, 0x52, 0x0a, 0x17, 0xd1, 0x83, 0x84, 0x8b, 0xd3, 0x30, 0xe1,
	0xc7, 0xbd, 0x76, 0x32, 0x46, 0xcf, 0x7b, 0xe3, 0x3e, 0xe0, 0x6b, 0x0f, 0xa0, 0x40, 0x38, 0x1c,
	0x0a, 0xec, 0xdf, 0xf9, 0xe3, 0x87, 0xdb, 0xf9, 0x87, 0x44, 0xd3, 0xb1, 0xa1, 0xd1, 0x74, 0x01,
	0x22, 0xdb, 0x2d, 0xd6, 0x44, 0x82, 0x36, 0x71, 0x64, 0x20, 0x14, 0xd0, 0xda, 0x47, 0xb7, 0x5b,
	0xb4, 0x62, 0x1f, 0xa0, 0x1f, 0xef, 0x03, 0xf4, 0x6f, 0x85, 0xf1, 0xed, 0x96, 0x66, 0xd8, 0x76,
	0x0f, 0x6b, 0xdd, 0x96, 0x5e, 0xc3, 0x3c, 0x68, 0xcd, 0xf6, 0xd5, 0xb9, 0x61, 0x32, 0x47, 0x24,
	0x87, 0xe4, 0x3c, 0xd1, 0x2e, 0x13, 0x65, 0x65, 0x99, 0x82, 0x08, 0xdb, 0x68, 0x76, 0x30, 0xf6,
	0x2f, 0xd6, 0x49, 0xda, 0xd0, 0xb4, 0x2b, 0x95, 0xa1, 0xc7, 0xdd, 0xa0, 0xe0, 0x87, 0xbb, 0xa6,
	0xe5, 0x68, 0x75, 0x5c, 0x6b, 0xe9, 0x16, 0x8b, 0x96, 0x0a, 0xf3, 0x7a, 0x26, 0x59, 0xf5, 0x04,
	0x04, 0x17, 0xd4, 0x7a, 0x16, 0x89, 0xe0, 0x7b, 0x34, 0xc2, 0xc4, 0x54, 0x97, 0x56, 0xee, 0x87,
	0x84, 0x88, 0xbc, 0xac, 0xfb, 0xd3, 0xb7, 0xe9, 0x3e, 0xd7, 0x66, 0xdd, 0xf7, 0xd0, 0xe8, 0xcc,
	0x81, 0xd1, 0xe8, 0xec, 0x00, 0x1a, 0x4d, 0x7a, 0x68, 0xf4, 0x4d, 0x80, 0xf4, 0x9a, 0xd3, 0xd3,
	0x5b, 0x04, 0x45, 0xea, 0x16, 0x3d, 0xb1, 0x1f, 0xa5, 0xe2, 0x09, 0xc6, 0x5f, 0x15, 0x6c, 0x72,
	0x1c, 0xe3, 0xaa, 0x64, 0x1d, 0xec, 0xea, 0x2d, 0x0a, 0xd6, 0x42, 0x6a, 0x82, 0x71, 0xd3, 0x8c,
	0x29, 0xa1, 0xf2, 0x63, 0x87, 0x47, 0xe5, 0xc7, 0x0f, 0x88, 0xca, 0xef, 0x87, 0x63, 0x2d, 0xec,
	0x38, 0xd8, 0xd2, 0xcc, 0x86, 0x56, 0xb3, 0x70, 0xdd, 0x70, 0xb8, 0x4f, 0x48, 0xd0, 0x6d, 0x96,
	0xa9, 0x94, 0x1a, 0x19, 0xaa, 0x40, 0xbd, 0x80, 0xa2, 0xbd, 0xb7, 0xc3, 0x89, 0x01, 0x6b, 0xfc,
	0x70, 0xd7, 0xb0, 0x70, 0x9d, 0xd9, 0xdf, 0x41, 0xed, 0x8f, 0xfa, 0xed, 0xb3, 0x4c, 0x83, 0xd6,
	0xe0, 0xdb, 0x63, 0xee, 0xec, 0xdf, 0x63, 0x6e, 0xb1, 0xbb, 0x9e, 0x7c, 0x3d, 0xbb, 0xab, 0x87,
	0xa4, 0x4f, 0xc9, 0x48, 0xfa, 0xc1, 0x70, 0x14, 0xa1, 0xc9, 0x07, 0xc3, 0xd1, 0x23, 0x68, 0x66,
	0xfe, 0x33, 0x00, 0xa1, 0xad, 0xb5, 0xc2, 0x2f, 0x35, 0xea, 0x7b, 0xcb, 0x00, 0xea, 0xeb, 0x3f,
	0x84, 0x6e, 0xad, 0x15, 0x0e, 0x07, 0xfb, 0xde, 0x06, 0xc7, 0xf5, 0x9e, 0xb3, 0x63, 0x5a, 0xc6,
	0xbb, 0x70, 0x5d, 0xeb, 0x62, 0xcb, 0x36, 0x3b, 0x5a, 0xc3, 0xb0, 0x6c, 0x47, 0xeb, 0xe8, 0x6d,
	0xcc, 0x31, 0xe0, 0x51, 0x4f, 0xa7, 0x4c, 0x55, 0x72, 0x44, 0xa3, 0xa8, 0xb7, 0x49, 0xa0, 0x3c,
	0x36, 0x58, 0x41, 0x4b, 0x17, 0xf6, 0x0c, 0x1f, 0x26, 0xfb, 0xed, 0x37, 0x74, 0x6e, 0x7e, 0x58,
	0xb8, 0x78, 0xbf, 0xef, 0x40, 0x9d, 0x18, 0x0a, 0x44, 0xc8, 0x24, 0x0c, 0x3f, 0x45, 0xfb, 0x5c,
	0x73, 0x7c, 0x7f, 0xf8, 0x33, 0xd1, 0x0f, 0x7f, 0x96, 0x04, 0xfc, 0x41, 0xb4, 0xd5, 0x13, 0x43,
	0x5a, 0x1d, 0xc0, 0x3f, 0x73, 0x1f, 0x0a, 0xcb, 0x87, 0xa2, 0x53, 0x30, 0x26, 0xe7, 0x2a, 0x39,
	0x36, 0x88, 0x4b, 0xa9, 0xca, 0x21, 0x89, 0x9d, 0xe0, 0xb0, 0xc4, 0xce, 0x9b, 0x00, 0x79, 0x07,
	0x3e, 0xae, 0xc8, 0xc0, 0xc2, 0x84, 0xcb, 0xe7, 0xaa, 0x19, 0x18, 0xf7, 0x54, 0xe9, 0x4e, 0x13,
	0x3e, 0xc0, 0xb9, 0x2b, 0x51, 0x93, 0x49, 0xb2, 0x6c, 0x6c, 0xac, 0xb7, 0xfc, 0xc9, 0x26, 0x20,
	0x2c, 0xde, 0xca, 0x32, 0xc4, 0xa8, 0x02, 0x6d, 0x60, 0x94, 0x36, 0x30, 0x3b, 0xb0, 0x5b, 0xea,
	0x74, 0x13, 0x53, 0xa3, 0x36, 0x2f, 0x29, 0x27, 0xfd, 0x09, 0x45, 0xe6, 0xee, 0x32, 0x8b, 0x0c,
	0x54, 0x22, 0x35, 0xf2, 0xb5, 0xa8, 0xef, 0x87, 0xd4, 0x09, 0x89, 0x5f, 0x35, 0xda, 0x64, 0xff,
	0x02, 0x72, 0x50, 0xbd, 0x89, 0x8d, 0xe6, 0x8e, 0x43, 0x1d, 0x7d, 0x30, 0x5c, 0x5e, 0xa5, 0x42,
	0x35, 0xb6, 0xdb, 0x6c, 0xb3, 0xa2, 0x72, 0x11, 0xc6, 0x28, 0x16, 0x11, 0x76, 0xb0, 0x9f, 0x5d,
	0x9c, 0xaa, 0x72, 0xcb, 0x0b, 0x10, 0x77, 0x74, 0x0b, 0x0b, 0xc3, 0xf8, 0x7e, 0x86, 0x40, 0x34,
	0x59, 0xf9, 0x75, 0xe0, 0xdb, 0x96, 0x84, 0x6f, 0x93, 0x30, 0xbd, 0xb5, 0x56, 0x18, 0x06, 0x70,
	0xa7, 0x01, 0xf9, 0x24, 0x0c, 0xe1, 0xce, 0xc2, 0x94, 0x5f, 0x5f, 0x40, 0xdc, 0x7e, 0x41, 0x1f,
	0xc6, 0x7d, 0x21, 0x04, 0xb0, 0xb5, 0x56, 0xf8, 0x05, 0xc8, 0x79, 0xca, 0xf0, 0x77, 0xe4, 0xb5,
	0xc0, 0xdf, 0xf2, 0x20, 0x78, 0x1c, 0x1d, 0x9a, 0x92, 0xf3, 0xc6, 0x2b, 0x92, 0x44, 0x6c, 0x38,
	0x03, 0x28, 0xd3, 0x17, 0x50, 0x22, 0xfd, 0x01, 0xc5, 0x07, 0xd6, 0xa2, 0x7d, 0x60, 0xcd, 0xdb,
	0xb4, 0x62, 0xf2, 0xa6, 0x35, 0xa7, 0x43, 0xc2, 0xd7, 0xe6, 0x90, 0x88, 0x10, 0x38, 0x68, 0x44,
	0x08, 0x0e, 0x8d, 0x08, 0xf3, 0x5f, 0x0f, 0xc3, 0x04, 0x47, 0xf8, 0x95, 0xda, 0x0e, 0xae, 0xf7,
	0x5a, 0x58, 0xfa, 0x1c, 0x01, 0xdf, 0xe7, 0x98, 0x81, 0xd1, 0x5d, 0x73, 0x4f, 0x6f, 0x0a, 0x6f,
	0xe4, 0x14, 0x09, 0x96, 0x36, 0xb6, 0x0c, 0x16, 0x12, 0x78, 0x7a, 0x25, 0xc6, 0x38, 0xc5, 0x5e,
	0x5b, 0x79, 0xab, 0x8b, 0x74, 0xd8, 0x1d, 0xc7, 0x1b, 0x87, 0x1f, 0x30, 0x44, 0xf3, 0xfd, 0xc8,
	0xe7, 0x01, 0x88, 0x58, 0x66, 0xcf, 0x31, 0x3a, 0xcd, 0xe4, 0x08, 0xfd, 0x42, 0xff, 0xef, 0x36,
	0xf6, 0xaa, 0xd9, 0x73, 0xb0, 0x2a, 0x8c, 0xe6, 0xbe, 0x16, 0x80, 0x11, 0xca, 0x22, 0x81, 0x8b,
	0x33, 0x35, 0x1b, 0x3f, 0x24, 0xf6, 0x7b, 0xce, 0xaa, 0xe0, 0x87, 0x94, 0x37, 0x43, 0x98, 0x60,
	0x54, 0x3a, 0xbc, 0x7d, 0xb0, 0x26, 0x55, 0x12, 0x20, 0x31, 0xe4, 0x81, 0x44, 0x0e, 0x24, 0xc3,
	0x3e, 0x20, 0xa9, 0x3b, 0x3a, 0xdf, 0xee, 0x49, 0x91, 0x71, 0xea, 0x34, 0x2a, 0x52, 0x4e, 0x9d,
	0x6c, 0xfe, 0xf5, 0x76, 0x4b, 0x6b, 0xb4, 0xf4, 0x26, 0x0f, 0x7a, 0x91, 0x7a, 0xbb, 0x95, 0x6b,
	0xe9, 0x4d, 0xb2, 0xfa, 0x31, 0x09, 0x0c, 0x3c, 0xca, 0x31, 0x62, 0xee, 0x63, 0x01, 0x18, 0xe5,
	0xf8, 0xee, 0xff, 0xc3, 0x04, 0xdb, 0x44, 0xd8, 0x5c, 0x09, 0x14, 0x43, 0x1c, 0x82, 0xb0, 0x99,
	0x56, 0xbe, 0x2e, 0x2f, 0xa4, 0xa0, 0x7f, 0x21, 0x9d, 0xf2, 0x0e, 0x37, 0x2d, 0xa3, 0x83, 0xf9,
	0x02, 0x14, 0x07, 0x98, 0x0d, 0xa3, 0x43, 0xaf, 0x9a, 0xe8, 0xfe, 0xcd, 0x96, 0x20, 0x2d, 0x93,
	0x4f, 0xde, 0x6a, 0x99, 0x7b, 0x75, 0x96, 0xc2, 0x67, 0x07, 0xbf, 0x18, 0xe5, 0x64, 0xcc, 0x3a,
	0x9e, 0xff, 0x70, 0x10, 0x46, 0x28, 0xc6, 0x56, 0xd2, 0x80, 0x28, 0x7e, 0x27, 0x10, 0xd2, 0xc2,
	0x35, 0x6c, 0x74, 0x59, 0xbe, 0x6e, 0x9f, 0xe9, 0x1d, 0xa7, 0x06, 0xa5, 0x86, 0xca, 0xd4, 0x95,
	0xb7, 0xc1, 0x04, 0x3d, 0x53, 0x98, 0x0d, 0xad, 0x65, 0xea, 0x75, 0xe2, 0x08, 0xb7, 0xf9, 0x40,
	0x09, 0xa2, 0x5f, 0x6a, 0x6c, 0x30, 0x6d, 0x25, 0x03, 0x93, 0xa2, 0x82, 0xba, 0x61, 0xd7, 0x76,
	0x74, 0xab, 0xc9, 0x06, 0xba, 0x4f, 0x15, 0x13, 0xac, 0x8a, 0x55, 0xa1, 0x4f, 0x2b, 0x11, 0x03,
	0xa9, 0xe3, 0x96, 0xb1, 0x8b, 0xad, 0x3d, 0xee, 0xd0, 0xfb, 0x54, 0xc2, 0x46, 0xb2, 0xca, 0xf5,
	0xe7, 0x1f, 0x8d, 0x02, 0x78, 0x19, 0x2c, 0xe5, 0x5e, 0x38, 0x4a, 0x93, 0x1e, 0xd8, 0xb2, 0x35,
	0x37, 0x99, 0xe5, 0x5f, 0xd9, 0xb3, 0x42, 0xc1, 0x35, 0x73, 0x4f, 0x8b, 0x53, 0xdb, 0xad, 0x41,
	0x2b, 0xf6, 0x79, 0x27, 0xb7, 0x5b, 0xfd, 0xfa, 0x29, 0x38, 0xd2, 0xed, 0x59, 0xb5, 0x1d, 0xdd,
	0xee, 0x3b, 0xd0, 0xb1, 0x2f, 0x3e, 0x25, 0x84, 0xf2, 0x79, 0xee, 0x5e, 0x38, 0xda, 0x30, 0xad,
	0x9b, 0xba, 0x55, 0x1f, 0xd2, 0x3f, 0xe6, 0x0e, 0xb3, 0x42, 0xa1, 0xbf, 0x3d, 0x12, 0x14, 0x8c,
	0xba, 0x1f, 0x24, 0xc4, 0x6c, 0xa3, 0xee, 0x89, 0xdf, 0x69, 0x6e, 0xfb, 0xaf, 0xa3, 0x62, 0xef,
	0x34, 0x45, 0xea, 0xf0, 0x7e, 0x98, 0xf3, 0xce, 0x9f, 0x03, 0x4d, 0xb3, 0x65, 0x92, 0x74, 0x35,
	0xfa, 0xdb, 0x7e, 0x3b, 0x1c, 0x77, 0x2c, 0xbd, 0x63, 0xeb, 0x34, 0xd6, 0x0f, 0xda, 0xb3, 0xf8,
	0x3b, 0x27, 0xe9, 0xf4, 0xd7, 0x70, 0x17, 0x24, 0x1c, 0xdd, 0x32, 0x1a, 0x0d, 0x61, 0xc2, 0x6f,
	0xa9, 0x18, 0xd3, 0x9b, 0x1e, 0x76, 0xa8, 0xa5, 0x17, 0xee, 0x7d, 0x6d, 0x30, 0xb4, 0x3c, 0x2b,
	0x14, 0xfa, 0x1b, 0xb8, 0x08, 0x49, 0xa3, 0xb3, 0x6b, 0x92, 0x75, 0x37, 0x60, 0xca, 0x80, 0xf2,
	0x0c, 0x97, 0xf7, 0x5b, 0x5e, 0x82, 0xa3, 0x03, 0xa7, 0x32, 0x5a, 0x45, 0xa7, 0x86, 0x79, 0x66,
	0x61, 0xc6, 0x7f, 0x22, 0x53, 0xb9, 0x94, 0xec, 0x0b, 0xdb, 0x96, 0x79, 0x43, 0xee, 0x2e, 0x7f,
	0x8b, 0x31, 0xc1, 0xf8, 0x6e, 0x5b, 0xa4, 0x95, 0xa6, 0xb9, 0x4b, 0x08, 0x47, 0xea, 0xa0, 0x69,
	0x69, 0x8d, 0x76, 0x8d, 0x27, 0x1b, 0x66, 0x84, 0x82, 0x6b, 0x55, 0xb2, 0x72, 0xed, 0x1a, 0xf1,
	0x34, 0x9e, 0x05, 0x68, 0x19, 0x35, 0xdc, 0xb1, 0xdd, 0x71, 0x4d, 0x30, 0x4f, 0x63, 0xc2, 0x0d,
	0x26, 0x73, 0xbf, 0xf7, 0xbe, 0x07, 0x55, 0xb4, 0xff, 0x41, 0xf5, 0x01, 0x38, 0x3e, 0xfc, 0xa0,
	0xba, 0xc7, 0xcc, 0x27, 0xa9, 0x79, 0x72, 0xc8, 0x39, 0x75, 0x8f, 0xda, 0x5f, 0x12, 0x1f, 0xd2,
	0xed, 0xb1, 0xd4, 0x36, 0x4b, 0x8d, 0xce, 0xf8, 0x7a, 0xed, 0x35, 0x7d, 0x1f, 0xcc, 0xf5, 0x99,
	0xca, 0x0d, 0xb3, 0x1b, 0xae, 0x59, 0x9f, 0xad, 0xd7, 0xee, 0xfc, 0x13, 0x61, 0x98, 0x1a, 0x92,
	0x8b, 0x96, 0x72, 0x03, 0x81, 0x83, 0xe4, 0x06, 0x4e, 0xc2, 0x98, 0xef, 0x46, 0x86, 0xa1, 0x2b,
	0xa8, 0x79, 0xf7, 0x36, 0xfd, 0x19, 0xb0, 0xd0, 0xeb, 0xcb, 0x80, 0x85, 0x0f, 0x97, 0x01, 0xf3,
	0xb2, 0x31, 0x23, 0xb7, 0xcf, 0xc6, 0x14, 0x60, 0xa6, 0x2f, 0x2f, 0x49, 0x06, 0x66, 0xd4, 0x30,
	0x7f, 0xd2, 0x70, 0xcb, 0x60, 0x3b, 0xed, 0x4f, 0x4c, 0x96, 0xa8, 0xd1, 0x90, 0x3c, 0x58, 0xe4,
	0x70, 0x79, 0x30, 0x39, 0xed, 0x12, 0x3d, 0x60, 0xda, 0xe5, 0x04, 0x40, 0x1d, 0x6f, 0x1b, 0x8e,
	0x7c, 0xc1, 0x1d, 0xa3, 0x1c, 0x7a, 0xbb, 0xcd, 0x71, 0x02, 0x0c, 0x24, 0x9c, 0xe2, 0x2e, 0x96,
	0x98, 0xff, 0xc7, 0x00, 0x28, 0x83, 0x29, 0x0f, 0x65, 0x19, 0x46, 0xf5, 0xb6, 0xd9, 0xeb, 0x88,
	0x4d, 0x74, 0xff, 0xd7, 0x1a, 0x5c, 0xd7, 0x97, 0x68, 0x0b, 0xde, 0x2e, 0xd1, 0x16, 0x3a, 0x4c,
	0xa2, 0xed, 0x14, 0x08, 0x5a, 0x73, 0xb0, 0xd5, 0xe6, 0x9b, 0x42, 0x9c, 0xf3, 0xaa, 0xd8, 0x6a,
	0x13, 0x10, 0xd3, 0xd5, 0xf7, 0xdc, 0x3d, 0x80, 0x11, 0xf3, 0xff, 0x14, 0x84, 0xa9, 0x21, 0x57,
	0x1b, 0x72, 0x12, 0x34, 0x70, 0x90, 0x24, 0xe8, 0x09, 0x80, 0xed, 0x96, 0x56, 0x33, 0xdb, 0xf4,
	0xd0, 0xc8, 0x06, 0x17, 0xdb, 0x6e, 0x65, 0x18, 0x43, 0x79, 0x00, 0x8e, 0x35, 0x2c, 0x7a, 0xd4,
	0xc2, 0x75, 0xcd, 0xb4, 0x8c, 0xa6, 0xd1, 0xd1, 0x5b, 0x9a, 0x7b, 0x1b, 0xc9, 0xc0, 0xdb, 0x51,
	0x57, 0xa5, 0xc4, 0x35, 0xae, 0x88, 0xeb, 0xc9, 0x0b, 0x30, 0xeb, 0xd9, 0xd7, 0xcc, 0xee, 0x9e,
	0x67, 0xcb, 0x60, 0xde, 0x11, 0x57, 0x9c, 0x31, 0xbb, 0x7b, 0xae, 0x5d, 0x06, 0xee, 0xe8, 0x75,
	0xb4, 0xfd, 0x9a, 0x66, 0x98, 0xf0, 0x58, 0xaf, 0x93, 0xbb, 0x65, 0xe3, 0xf7, 0xc1, 0x9c, 0xaf,
	0x12, 0x7f, 0xfb, 0x0c, 0x42, 0xce, 0x4a, 0x15, 0xc8, 0x3d, 0x98, 0xff, 0x48, 0x00, 0x22, 0x22,
	0x47, 0x7f, 0x02, 0x40, 0xca, 0xe3, 0x30, 0x60, 0x11, 0x6b, 0xb8, 0x79, 0x9b, 0x63, 0x10, 0xf3,
	0xb2, 0x34, 0xdc, 0x3f, 0x5a, 0x22, 0x2b, 0x43, 0x3e, 0xdf, 0x8e, 0xe9, 0x22, 0x43, 0x46, 0x10,
	0x87, 0x6d, 0xe8, 0x0f, 0xf3, 0xcf, 0x4d, 0x8a, 0x14, 0xab, 0xb6, 0x75, 0xa3, 0x25, 0x3e, 0x33,
	0x25, 0x08, 0xf0, 0xd4, 0xeb, 0x75, 0x0b, 0xdb, 0xb6, 0xb8, 0x1d, 0xe0, 0xe4, 0xfc, 0x36, 0x8c,
	0xfb, 0x6f, 0x16, 0x5c, 0x9c, 0x19, 0x90, 0x70, 0xa6, 0xdb, 0x7a, 0x70, 0x48, 0xeb, 0xa1, 0x21,
	0xad, 0x87, 0xa5, 0xd6, 0xe7, 0x3f, 0x18, 0x86, 0x11, 0x9a, 0x34, 0x52, 0xee, 0xe6, 0xd7, 0xcc,
	0xcc, 0xa7, 0x8e, 0x0e, 0x4b, 0x2c, 0x2d, 0x48, 0x0f, 0xb8, 0x4e, 0xc1, 0x18, 0xbf, 0x35, 0x96,
	0x27, 0x25, 0xce, 0x79, 0x74, 0x5e, 0x16, 0x21, 0x22, 0xee, 0x4d, 0x42, 0x43, 0xdf, 0x5a, 0x89,
	0x0b, 0x13, 0xa1, 0x46, 0x5d, 0x95, 0x1f, 0xde, 0x8c, 0x3a, 0xef, 0x68, 0x8c, 0x73, 0xf2, 0x75,
	0xe5, 0x34, 0x84, 0x6b, 0x9d, 0xd4, 0x32, 0x8f, 0x91, 0x53, 0xfd, 0xb5, 0x15, 0x53, 0xcb, 0x2a,
	0x55, 0xa0, 0x59, 0x49, 0xde, 0x39, 0x43, 0x9c, 0x24, 0x62, 0x9c, 0x93, 0xaf, 0xcf, 0x3f, 0x1e,
	0x84, 0x30, 0x5d, 0x1a, 0x93, 0x90, 0x28, 0xa7, 0xd5, 0xea, 0x75, 0x29, 0x1d, 0x10, 0x87, 0x08,
	0x7f, 0xdb, 0x84, 0x02, 0x84, 0xa8, 0xac, 0xe7, 0xcb, 0xe5, 0xac, 0x8a, 0x82, 0x4a, 0x02, 0x62,
	0x99, 0x52, 0xb1, 0x92, 0x5f, 0x2b, 0x66, 0xb3, 0x28, 0x44, 0xc8, 0x5c, 0x49, 0xbd, 0x9a, 0x56,
	0x57, 0xb3, 0x2a, 0x0a, 0x2b, 0x08, 0xc6, 0x8a, 0xa5, 0x6a, 0x3e, 0x77, 0x5d, 0xa3, 0x35, 0xa2,
	0x11, 0xe5, 0x08, 0x4c, 0xa6, 0x37, 0x2a, 0x25, 0xcd, 0xc7, 0x1e, 0x55, 0xe6, 0x60, 0xa6, 0x50,
	0x52, 0xb3, 0xda, 0xa0, 0x2c, 0xa2, 0x28, 0x30, 0x9e, 0x29, 0x15, 0xab, 0x6a, 0x3a, 0x53, 0xe5,
	0xbc, 0x28, 0xe9, 0x63, 0x4e, 0xcd, 0xe6, 0xd7, 0xd6, 0x09, 0xeb, 0x7a, 0x56, 0x45, 0x31, 0xd2,
	0x34, 0xe9, 0x96, 0x96, 0x53, 0x4b, 0x05, 0x04, 0xa2, 0x97, 0x5a, 0xb5, 0x84, 0xe2, 0xca, 0x18,
	0x44, 0xf3, 0x85, 0x72, 0x49, 0xad, 0x66, 0x55, 0x34, 0xa6, 0x00, 0x8c, 0x92, 0xd1, 0x64, 0x55,
	0x94, 0x20, 0x6a, 0x99, 0xb4, 0xaa, 0xe6, 0xb3, 0x2a, 0x1a, 0x27, 0x2d, 0x5d, 0x25, 0x95, 0xe6,
	0x8b, 0x6b, 0xbc, 0xa5, 0x89, 0xf9, 0x57, 0x02, 0x10, 0x26, 0x93, 0xe8, 0xbe, 0x38, 0x08, 0x0c,
	0xcf, 0x7c, 0x15, 0x53, 0xcb, 0x0b, 0x24, 0x4a, 0x4b, 0xde, 0xa0, 0x40, 0x98, 0x06, 0x72, 0xe6,
	0x05, 0xb4, 0xcc, 0x3c, 0xa4, 0x47, 0xce, 0x63, 0x2c, 0xc8, 0x87, 0x84, 0x87, 0x50, 0x1e, 0x0d,
	0xf3, 0xe7, 0x61, 0x96, 0x98, 0x13, 0x4c, 0x82, 0x3b, 0x0e, 0xb6, 0xba, 0x96, 0x21, 0xde, 0x3c,
	0xb1, 0x8f, 0x3f, 0x4d, 0xc4, 0xa5, 0x46, 0xd6, 0x15, 0xd2, 0xb3, 0x53, 0x19, 0xa2, 0xa2, 0x7d,
	0x32, 0xef, 0x99, 0xd2, 0x6a, 0xd6, 0x7f, 0x63, 0x99, 0x2d, 0x56, 0xb3, 0x6a, 0x59, 0xcd, 0x57,
	0xb2, 0x1a, 0x11, 0xa2, 0x00, 0x99, 0x96, 0x72, 0xba, 0x52, 0x21, 0x13, 0x83, 0x82, 0xca, 0x04,
	0xc4, 0xcb, 0x59, 0xb5, 0x52, 0x2a, 0xa6, 0x37, 0xb4, 0xfc, 0x2a, 0x0a, 0xcd, 0xa7, 0x20, 0x2a,
	0xc2, 0xb7, 0x3b, 0x96, 0x80, 0x34, 0x16, 0xb1, 0xf0, 0x82, 0xde, 0xc2, 0x9b, 0xbf, 0x0a, 0x71,
	0xe9, 0xed, 0xa1, 0x92, 0x82, 0x70, 0xaf, 0x63, 0x38, 0x7c, 0xd2, 0xee, 0xb8, 0xf5, 0x2b, 0xc5,
	0xcd, 0x8e, 0xe1, 0xa8, 0x54, 0xd7, 0x9f, 0xbb, 0x0a, 0xf0, 0xdc, 0xd5, 0x7c, 0x09, 0x22, 0xfc,
	0x15, 0xa2, 0xb2, 0xe0, 0xab, 0x74, 0x6e, 0xf8, 0x5b, 0xc5, 0xdb, 0x56, 0x58, 0x80, 0x51, 0x9e,
	0x84, 0xbb, 0xdb, 0x57, 0xdf, 0xd1, 0xa1, 0xd9, 0xb7, 0x83, 0x54, 0xb7, 0x65, 0xb6, 0x7a, 0x6d,
	0x7c, 0x9b, 0xea, 0x98, 0xd2, 0x6d, 0xab, 0xfb, 0x40, 0x00, 0xe2, 0xd2, 0x2b, 0xc8, 0xdb, 0x4c,
	0xa4, 0xa4, 0x29, 0xd5, 0x3c, 0x03, 0xa3, 0x2d, 0xdc, 0x69, 0x3a, 0x3b, 0xbc, 0x6a, 0x4e, 0x91,
	0x16, 0x6f, 0x1a, 0x75, 0x67, 0x87, 0x3a, 0x5f, 0x40, 0x65, 0x04, 0xd1, 0xde, 0x61, 0x59, 0xc8,
	0x30, 0xd3, 0x66, 0xd4, 0x7c, 0x0d, 0x22, 0x65, 0xbd, 0x76, 0x43, 0x6f, 0x62, 0x32, 0xf1, 0xd2,
	0x12, 0x98, 0x1b, 0x88, 0x86, 0x54, 0x4b, 0x5a, 0x00, 0xd3, 0x30, 0x42, 0x1d, 0x9b, 0x23, 0x4b,
	0x46, 0xb8, 0x6e, 0x13, 0x92, 0xdc, 0xe6, 0xd9, 0x20, 0x8c, 0xc9, 0xaf, 0xdf, 0x94, 0x93, 0x10,
	0xaf, 0x63, 0xbb, 0x66, 0x19, 0x5d, 0xc7, 0x4b, 0x28, 0xc9, 0x2c, 0x65, 0x16, 0x22, 0x3b, 0xb6,
	0x26, 0x2d, 0xb0, 0xd1, 0x1d, 0x9b, 0xae, 0x9f, 0x69, 0x18, 0x69, 0xeb, 0xd6, 0x0d, 0x5b, 0xec,
	0x3c, 0x94, 0x50, 0x32, 0x30, 0x5e, 0xd7, 0x3b, 0x4d, 0x6c, 0x99, 0x3d, 0x5b, 0x6b, 0x9a, 0x26,
	0x89, 0xa4, 0xc3, 0x32, 0xff, 0xab, 0x42, 0x69, 0xcd, 0x34, 0xeb, 0x6a, 0xa2, 0x2e, 0x93, 0x24,
	0x78, 0x77, 0xd9, 0x28, 0x79, 0xb8, 0x9d, 0x19, 0x3e, 0x07, 0xaa, 0x50, 0xa3, 0x90, 0x9c, 0x7e,
	0x71, 0x0e, 0x43, 0x8f, 0x0c, 0x75, 0x07, 0x95, 0x2b, 0x11, 0x75, 0x9e, 0x0a, 0x8e, 0xec, 0x97,
	0x0a, 0xe6, 0x4a, 0xf3, 0x5f, 0x88, 0x40, 0x84, 0x5f, 0x87, 0xff, 0x82, 0xce, 0xd8, 0xdb, 0x7d,
	0x97, 0x2d, 0x2c, 0x11, 0x77, 0x72, 0xf8, 0x85, 0xfe, 0xf0, 0x0b, 0x97, 0xb9, 0x17, 0x47, 0xfe,
	0xef, 0xfa, 0x63, 0x9f, 0xeb, 0x8f, 0x81, 0x37, 0xe3, 0x91, 0xdb, 0xbf, 0x19, 0x8f, 0xbe, 0xb6,
	0x37, 0xe3, 0xb1, 0x5b, 0xbc, 0x19, 0x87, 0xc3, 0xbf, 0x19, 0x8f, 0x1f, 0xea, 0xcd, 0xb8, 0xb4,
	0xec, 0xc6, 0x0e, 0xbb, 0xec, 0x12, 0x87, 0x5b, 0x76, 0xe3, 0x07, 0x58, 0x76, 0x04, 0x47, 0xda,
	0x66, 0x8d, 0x5f, 0xef, 0x91, 0x62, 0xff, 0xab, 0x76, 0x74, 0xa8, 0x57, 0xed, 0xf3, 0xdf, 0x08,
	0x43, 0xc2, 0xb7, 0x8a, 0xe8, 0x3d, 0x62, 0xdb, 0xd4, 0x6a, 0x2d, 0xdd, 0xb6, 0xcf, 0x09, 0xe4,
	0x6d, 0xb4, 0xcd, 0x0c, 0x65, 0xf8, 0xc4, 0x29, 0x71, 0x7a, 0x11, 0xe2, 0x94, 0x4f, 0xbc, 0xc4,
	0x9d, 0xda, 0x15, 0x2f, 0x11, 0x4f, 0xec, 0xd5, 0xbd, 0xd5, 0xc1, 0x40, 0x05, 0x10, 0x16, 0xf7,
	0xc4, 0x5f, 0x01, 0x65, 0x47, 0x7f, 0x97, 0x6e, 0xd5, 0xb5, 0xae, 0xde, 0xc4, 0x7e, 0x8f, 0x45,
	0x4c, 0x52, 0xd6, 0x9b, 0x52, 0xce, 0x8b, 0x4c, 0x3b, 0x59, 0x6f, 0x4d, 0xcb, 0xec, 0x75, 0x39,
	0x62, 0x1f, 0xe3, 0xcc, 0x35, 0xc2, 0x53, 0xee, 0x83, 0x78, 0xa3, 0xa5, 0xdb, 0x3b, 0x5a, 0xd7,
	0x34, 0x3a, 0x22, 0xba, 0xed, 0xe7, 0x81, 0x40, 0xd5, 0xcb, 0x44, 0x9b, 0x8c, 0x07, 0xb7, 0x6d,
	0x7f, 0x16, 0x2e, 0x86, 0xdb, 0x36, 0xef, 0xc0, 0x19, 0x40, 0x8e, 0x85, 0xdb, 0x5a, 0x8d, 0xf4,
	0xd8, 0x97, 0x77, 0x1b, 0x27, 0xfc, 0x8c, 0x6e, 0x89, 0xec, 0xe1, 0x9b, 0x61, 0x52, 0x6f, 0x36,
	0x2d, 0xdc, 0x64, 0x37, 0x4f, 0xb6, 0xa3, 0x3b, 0xe2, 0x7e, 0x1a, 0x49, 0x82, 0x8a, 0xc3, 0x53,
	0x34, 0x7c, 0x16, 0x48, 0xc8, 0xd4, 0xf8, 0xa5, 0x93, 0x3f, 0xd9, 0x36, 0xcb, 0x34, 0x48, 0x14,
	0xdd, 0x62, 0x72, 0xde, 0xd2, 0x69, 0x98, 0x10, 0x93, 0x52, 0xc7, 0x8e, 0x6e, 0xb4, 0x6c, 0xf1,
	0x7a, 0x87, 0xb3, 0x57, 0x19, 0x97, 0x44, 0xab, 0x1d, 0xfd, 0x5d, 0x6d, 0xdd, 0x71, 0x0f, 0xa3,
	0x2c, 0xb3, 0x96, 0x60, 0x5c, 0x71, 0x20, 0x4d, 0x41, 0x94, 0x9f, 0x07, 0xc4, 0x1b, 0xf0, 0x5b,
	0x9d, 0x1b, 0x5c, 0xbd, 0xf9, 0x77, 0x1f, 0x3a, 0xdf, 0x3f, 0x04, 0xd1, 0x49, 0xb7, 0x37, 0xa1,
	0xfe, 0xdb, 0x1b, 0x29, 0x95, 0x1f, 0xee, 0x4b, 0xe5, 0x9f, 0xfd, 0x9d, 0x04, 0x24, 0x7c, 0xf1,
	0x50, 0x89, 0xc1, 0x48, 0xa6, 0xaa, 0x15, 0xd3, 0xe8, 0x0d, 0xca, 0x18, 0x44, 0x32, 0x55, 0xed,
	0x5c, 0x6a, 0xad, 0x8c, 0x7e, 0x1c, 0xe1, 0x54, 0x6a, 0x71, 0xad, 0x8c, 0x5e, 0x15, 0xd4, 0x32,
	0xa1, 0x1e, 0x8b, 0x0a, 0xea, 0xfc, 0x5a, 0x19, 0x7d, 0x58, 0x50, 0xe7, 0x97, 0xd6, 0xca, 0xe8,
	0x23, 0x51, 0xd7, 0x6e, 0xfd, 0x0a, 0x7a, 0x69, 0xc2, 0xb5, 0x5b, 0xbf, 0x82, 0x5e, 0x71, 0xa9,
	0xf3, 0xeb, 0x57, 0xd0, 0x7f, 0xba, 0xd4, 0xc5, 0xf5, 0x2b, 0xe8, 0x11, 0x24, 0xec, 0x52, 0xe9,
	0x0c, 0xfa, 0xda, 0xac, 0x6b, 0x97, 0xce, 0xa0, 0x17, 0x5d, 0x2a, 0xb5, 0xb2, 0x88, 0xbe, 0x98,
	0x74, 0x65, 0x2b, 0xeb, 0xe8, 0xf9, 0x3b, 0xdd, 0xf6, 0x56, 0x36, 0xd1, 0x93, 0xa7, 0x5d, 0x2a,
	0x97, 0x41, 0xef, 0xbb, 0xc7, 0xd5, 0xcc, 0x65, 0xd0, 0x13, 0x12, 0x95, 0x43, 0x8f, 0xbc, 0xc5,
	0xa3, 0xd6, 0xd1, 0xcb, 0x0f, 0x78, 0x76, 0x2a, 0xfa, 0x5c, 0xce, 0xed, 0x67, 0x4e, 0x45, 0xdf,
	0xcc, 0x79, 0x33, 0xb1, 0x88, 0x9e, 0x2a, 0x0a, 0x6a, 0x79, 0x6d, 0x11, 0x3d, 0x5d, 0xf4, 0xe6,
	0xe5, 0x1c, 0xfa, 0xd8, 0x96, 0xa0, 0x96, 0xd7, 0xce, 0xa1, 0xa7, 0xb6, 0xdc, 0x11, 0xad, 0xa5,
	0xd0, 0x4f, 0x7e, 0xd5, 0xd3, 0x4c, 0xa1, 0xdf, 0xfa, 0x35, 0x8f, 0x5a, 0x42, 0x3f, 0xc2, 0x1e,
	0xb5, 0x8c, 0xfe, 0xa1, 0xed, 0x51, 0xd7, 0xd0, 0x73, 0x3d, 0x6f, 0x3e, 0xcf, 0xa1, 0xc7, 0xdf,
	0xe3, 0xcd, 0xe7, 0x39, 0xf4, 0xf4, 0x7b, 0x94, 0x84, 0x90, 0xa5, 0xd0, 0xab, 0xef, 0x0b, 0x70,
	0x72, 0x99, 0x90, 0x8f, 0xbd, 0x3f, 0xe0, 0x49, 0x97, 0xd0, 0x4b, 0x8f, 0x4a, 0xd2, 0x25, 0xf4,
	0xca, 0xa3, 0x92, 0x74, 0x19, 0x7d, 0xf5, 0x71, 0x49, 0xba, 0x8c, 0x5e, 0x7c, 0x5c, 0x92, 0xae,
	0xa1, 0x67, 0x9f, 0x94, 0xa4, 0x6b, 0xe8, 0xf9, 0x27, 0x25, 0xe9, 0x3a, 0x7a, 0xf2, 0x29, 0x49,
	0xba, 0x8e, 0x9e, 0x91, 0xc9, 0x6b, 0xe8, 0x89, 0x4f, 0x7a, 0xca, 0xf9, 0x75, 0xf4, 0x83, 0x3f,
	0xf3, 0xa4, 0xf9, 0x75, 0xf4, 0xc8, 0xb3, 0x9e, 0xb4, 0xb0, 0x89, 0xbe, 0xf1, 0x17, 0x9e, 0xb4,
	0xb0, 0x89, 0x5e, 0x96, 0xc8, 0xd2, 0x3a, 0x7a, 0xe1, 0x6f, 0x3c, 0xe5, 0x52, 0x05, 0x3d, 0xf5,
	0x15, 0x49, 0x5a, 0x41, 0x9f, 0xfd, 0x8a, 0x24, 0xad, 0xa2, 0x47, 0xbf, 0x2e, 0x49, 0xab, 0xe8,
	0x63, 0x5f, 0xf7, 0xa4, 0xe5, 0x73, 0xe8, 0xc7, 0xdf, 0x76, 0xa5, 0xe7, 0xcb, 0xe7, 0xd0, 0xef,
	0x7e, 0xc7, 0x95, 0x5e, 0x2c, 0x2f, 0xa1, 0x97, 0xbe, 0xeb, 0x4a, 0x53, 0xe5, 0x65, 0xf4, 0xed,
	0x7f, 0x71, 0xa5, 0xa9, 0xf2, 0x79, 0xf4, 0xa9, 0x7f, 0x73, 0xa5, 0x17, 0xca, 0xe7, 0xd1, 0x17,
	0x3d, 0x72, 0xb1, 0x9c, 0x41, 0x4f, 0xff, 0x87, 0xd4, 0x50, 0x0e, 0xbd, 0xfa, 0x1b, 0x41, 0x4f,
	0x9a, 0x43, 0x8f, 0xbd, 0x37, 0xe8, 0x49, 0x37, 0xd0, 0x4b, 0x1f, 0x94, 0xa4, 0x1b, 0xe8, 0x15,
	0x99, 0xbc, 0x8a, 0x5e, 0xfc, 0x50, 0xd0, 0xeb, 0xe4, 0x55, 0xf4, 0x3d, 0x97, 0xdc, 0x38, 0xaf,
	0x2e, 0xa2, 0xcf, 0x3f, 0x21, 0xc8, 0x42, 0x4a, 0x5d, 0x44, 0x7f, 0xe9, 0x91, 0x44, 0xfa, 0x57,
	0x2e, 0xb9, 0xbc, 0xac, 0x9e, 0x43, 0x5f, 0xfd, 0x03, 0xb7, 0xdd, 0xf3, 0x6a, 0x0a, 0x7d, 0xfc,
	0xe3, 0xae, 0x34, 0xa5, 0x2e, 0xa1, 0x3f, 0xfc, 0x63, 0xaf, 0x21, 0x75, 0x09, 0x7d, 0xc4, 0x25,
	0x53, 0x29, 0xf5, 0x12, 0xfa, 0xd7, 0x67, 0x24, 0xe5, 0x4b, 0xe8, 0xbd, 0x9f, 0x96, 0x94, 0x2f,
	0xa1, 0xf7, 0x7f, 0xda, 0x1b, 0x91, 0xba, 0x8a, 0xbe, 0xf1, 0x59, 0x6f, 0x08, 0xea, 0x2a, 0x7a,
	0xd9, 0x23, 0xd7, 0xd5, 0x55, 0xf4, 0xd5, 0x3f, 0x17, 0xe4, 0xb9, 0x94, 0x9a, 0x43, 0xcf, 0x3e,
	0x27, 0xd9, 0xe6, 0xd0, 0xe7, 0x9e, 0x93, 0x6c, 0x73, 0xe8, 0x85, 0xe7, 0xa4, 0x86, 0x72, 0xe8,
	0x9b, 0xb2, 0x74, 0x1d, 0x7d, 0xf6, 0x79, 0x49, 0xba, 0x8e, 0x3e, 0xff, 0xbc, 0x54, 0xd5, 0x15,
	0xf4, 0xe8, 0x0b, 0xde, 0x10, 0x2a, 0x4b, 0xe8, 0x27, 0xdf, 0xf2, 0x86, 0x5f, 0x59, 0x42, 0xff,
	0xfe, 0x2d, 0xaf, 0xaa, 0x8a, 0x8a, 0x7e, 0xf4, 0xcf, 0x9e, 0x6d, 0x75, 0x11, 0x7d, 0xe1, 0xfb,
	0x2e, 0xb9, 0x5c, 0x5d, 0x44, 0xcf, 0x7b, 0xe4, 0xf9, 0xea, 0x22, 0xfa, 0xf2, 0xf7, 0x25, 0xe5,
	0x0b, 0xe8, 0x93, 0x3f, 0xf4, 0x1a, 0xaa, 0x5e, 0x40, 0x9f, 0xfa, 0xa1, 0x37, 0x57, 0xd5, 0x0b,
	0xe8, 0xaf, 0x3d, 0xf2, 0x7c, 0xf5, 0x02, 0xfa, 0x5b, 0x4f, 0xf9, 0x62, 0xf5, 0x12, 0x7a, 0xf2,
	0xa7, 0xae, 0x94, 0x90, 0xcf, 0xfc, 0x54, 0xaa, 0xf9, 0x32, 0x7a, 0xf5, 0xbf, 0xbc, 0x4e, 0x56,
	0x2f, 0xa3, 0xc7, 0x7e, 0x26, 0x55, 0x75, 0x19, 0x7d, 0xf8, 0x67, 0x5e, 0x27, 0x37, 0x17, 0xd1,
	0xcb, 0xbf, 0x19, 0x72, 0x6b, 0xde, 0x5c, 0x44, 0x3f, 0x70, 0xc9, 0x65, 0x22, 0x7d, 0xd5, 0x23,
	0x89, 0xf4, 0x91, 0x0f, 0x08, 0x72, 0x23, 0xb5, 0xb9, 0x88, 0x3e, 0xe3, 0x92, 0xa9, 0xd4, 0xe6,
	0x05, 0xf4, 0xb5, 0xdf, 0x73, 0x95, 0x09, 0xf9, 0x5d, 0x8f, 0x3c, 0xbf, 0x79, 0x01, 0x7d, 0xcf,
	0x25, 0x53, 0x8b, 0x5b, 0x39, 0xf4, 0xec, 0xef, 0x4b, 0x64, 0x15, 0x3d, 0xf9, 0x51, 0x57, 0x99,
	0x90, 0xcf, 0x7c, 0xd4, 0x93, 0x5e, 0xbb, 0x86, 0xde, 0xf7, 0x09, 0x4f, 0x7a, 0xed, 0x1a, 0x7a,
	0xe2, 0x13, 0xa1, 0xb3, 0x7f, 0x1f, 0x80, 0xb8, 0x74, 0x4d, 0xa1, 0x24, 0x61, 0xba, 0x92, 0x55,
	0xb7, 0xf2, 0x99, 0xac, 0x56, 0xf0, 0x27, 0x4a, 0x10, 0x8c, 0x95, 0x4b, 0x6a, 0x55, 0xab, 0x96,
	0x34, 0x9a, 0x17, 0xc1, 0x32, 0xe7, 0x7a, 0x5a, 0x5d, 0x45, 0x0d, 0x99, 0xb3, 0x5a, 0x2a, 0xa9,
	0xa8, 0xa9, 0x4c, 0xc2, 0x18, 0x91, 0xb9, 0x56, 0x5f, 0x0e, 0xc8, 0x2c, 0x6a, 0xf6, 0x77, 0x3e,
	0x16, 0xb5, 0xfb, 0x0a, 0x65, 0x91, 0xa2, 0x6b, 0xf8, 0x27, 0x41, 0x99, 0x45, 0x0d, 0x3f, 0xe5,
	0x63, 0x51, 0xc3, 0x3f, 0x0d, 0x9e, 0x7d, 0xb7, 0x3b, 0x20, 0xba, 0xb9, 0x4a, 0x03, 0xaa, 0x5e,
	0x2f, 0xf7, 0x65, 0x7e, 0x84, 0x24, 0x97, 0xd9, 0x20, 0x7f, 0x28, 0xd0, 0xcf, 0xdc, 0xc8, 0x6c,
	0xa0, 0xa0, 0xcc, 0xdc, 0xe0, 0x9a, 0xa1, 0x7e, 0x26, 0xd1, 0x0c, 0x9f, 0x7d, 0x07, 0x8c, 0xb2,
	0x7c, 0x3a, 0x11, 0xaf, 0x6c, 0xf4, 0x37, 0x39, 0x0d, 0x48, 0x30, 0x4b, 0x6a, 0x7e, 0x2d, 0x5f,
	0x4c, 0x93, 0x36, 0x15, 0x18, 0x17, 0xdc, 0x4a, 0x36, 0x7d, 0x35, 0x7d, 0x1d, 0x91, 0x81, 0x25,
	0x04, 0x6f, 0xbd, 0xb4, 0x59, 0xc9, 0xa2, 0xd0, 0xd9, 0x3f, 0x0a, 0xc0, 0xf4, 0xb0, 0x47, 0x38,
	0x64, 0x88, 0x99, 0x52, 0x31, 0x97, 0x57, 0x0b, 0xe9, 0xbe, 0xd7, 0x4a, 0xb3, 0x30, 0xe5, 0x93,
	0xa4, 0x33, 0x99, 0x6c, 0xb9, 0xca, 0x1e, 0x2c, 0xf9, 0x4d, 0xc4, 0x83, 0xa5, 0x53, 0x70, 0xc2,
	0x27, 0x60, 0x0f, 0x96, 0xb4, 0x92, 0xaa, 0xa9, 0xd9, 0x07, 0xb3, 0x99, 0x2a, 0x0a, 0x91, 0x41,
	0xf4, 0x55, 0x7a, 0x19, 0x85, 0xcf, 0xae, 0xc1, 0x44, 0x5f, 0xd6, 0x8a, 0x34, 0x52, 0xcd, 0x16,
	0xca, 0x59, 0x35, 0x5d, 0xdd, 0x54, 0xb3, 0xfe, 0xac, 0x69, 0x26, 0xbb, 0x51, 0xc9, 0x6f, 0x56,
	0x50, 0x40, 0x19, 0x07, 0xc8, 0xa5, 0xd7, 0xd5, 0x6c, 0x71, 0x3d, 0x9b, 0xaf, 0xa2, 0xe0, 0xd9,
	0x7b, 0x21, 0x2e, 0x65, 0xaa, 0xc8, 0x3c, 0xa6, 0xf3, 0x6a, 0x6e, 0xa3, 0x74, 0x55, 0xaa, 0x00,
	0x60, 0x34, 0xb3, 0x52, 0xd0, 0xca, 0xeb, 0x28, 0xc0, 0xca, 0x39, 0xad, 0x5c, 0x40, 0xc1, 0xb3,
	0x29, 0x00, 0x2f, 0x8d, 0x44, 0xe6, 0x75, 0xab, 0xb4, 0xb1, 0x59, 0x90, 0x9b, 0x8e, 0x40, 0x28,
	0xb3, 0x52, 0x40, 0x01, 0x56, 0xc8, 0xa1, 0xe0, 0xd9, 0x45, 0x00, 0x2f, 0x93, 0xe5, 0x66, 0x3a,
	0xab, 0x92, 0xcd, 0x28, 0x04, 0x2f, 0xaf, 0xa1, 0x00, 0xf9, 0xdd, 0x58, 0x41, 0xc1, 0xb3, 0xf7,
	0xc3, 0x44, 0x5f, 0x5e, 0x89, 0x0c, 0xb5, 0x90, 0xa5, 0xc3, 0x2c, 0x64, 0x8b, 0x55, 0x7f, 0x7b,
	0xb9, 0x6c, 0x95, 0xb5, 0x57, 0xa8, 0xaa, 0x28, 0x78, 0xf6, 0x8b, 0x01, 0x88, 0x4b, 0x19, 0x21,
	0x9a, 0x5d, 0xbc, 0xbc, 0xe6, 0x1f, 0x1c, 0x61, 0x64, 0xaa, 0x6c, 0x70, 0xa4, 0x5c, 0xce, 0xa0,
	0xa0, 0x5b, 0xbe, 0x8c, 0x42, 0xae, 0x4e, 0x05, 0x85, 0x45, 0x79, 0x65, 0x0d, 0x8d, 0xb8, 0xe5,
	0x6b, 0x68, 0xd4, 0xd5, 0x51, 0x51, 0x44, 0x94, 0xd5, 0x12, 0x8a, 0x8a, 0xf2, 0x66, 0x11, 0xc5,
	0x44, 0x79, 0x55, 0x45, 0xe0, 0xda, 0x66, 0x51, 0xdc, 0x2d, 0x6f, 0xb0, 0xac, 0x30, 0x29, 0x57,
	0x2f, 0xa3, 0x84, 0x5b, 0xe7, 0x06, 0x1a, 0x3f, 0xfb, 0xdb, 0x01, 0x88, 0x8a, 0x73, 0x37, 0x59,
	0xf9, 0x95, 0x6c, 0x7a, 0xc3, 0x1f, 0x2f, 0x28, 0x47, 0x64, 0x91, 0x03, 0x2e, 0xc7, 0x4b, 0x92,
	0xcf, 0xc1, 0x0c, 0xe5, 0x5c, 0xd9, 0x4c, 0xab, 0xe9, 0x62, 0x35, 0x5f, 0xcc, 0x6a, 0xe9, 0xb5,
	0x6c, 0x31, 0x73, 0x1d, 0x85, 0x3c, 0xfb, 0xcd, 0x4a, 0xb5, 0x54, 0x20, 0x03, 0x15, 0xda, 0xd5,
	0xac, 0x5a, 0x20, 0x4b, 0x47, 0x2b, 0x51, 0xdf, 0x2a, 0xa9, 0x68, 0x64, 0xe5, 0x6e, 0x38, 0x5e,
	0x33, 0xdb, 0x0b, 0x14, 0xb5, 0x3b, 0x96, 0x5e, 0xc7, 0xfe, 0x43, 0xc0, 0x3b, 0x12, 0xbe, 0xff,
	0x88, 0xb1, 0x3d, 0x4a, 0x7f, 0x96, 0xfe, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x91, 0xd6, 0x50,
	0x29, 0x43, 0x00, 0x00,
}
